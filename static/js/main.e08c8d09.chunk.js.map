{"version":3,"sources":["components/Toolbox/Toolbox.module.scss","components/ColorPicker/ColorPicker.module.scss","components/Modal/Settings/Settings.module.scss","components/Header/Header.module.scss","components/Dropdown/Dropdown.module.scss","components/Sidebar/Sidebar.module.scss","components/NoteList/NoteList.module.scss","components/ViewNote/ViewNote.module.scss","components/App/App.module.scss","components/Search/Search.module.scss","components/Modal/Modal.module.scss","components/FilterPage/FilterPage.module.scss","components/NewNote/NewNote.module.scss","components/NoteForm/NoteForm.module.scss","components/NoteFormField/NoteFormField.module.scss","components/NoteBorder/NoteBorder.module.scss","components/FilterMessage/FilterMessage.module.scss","components/Dropdown/Dropdown.js","components/Search/Search.js","components/Modal/Modal.js","components/Modal/Settings/Settings.js","components/Header/Header.js","redux/selectors/generics.js","redux/selectors/labels.js","redux/actions/actionCreators.js","redux/actions/actionTypes.js","components/Sidebar/Sidebar.js","components/FilterPage/FilterPage.js","components/ColorPicker/ColorPicker.js","components/Toolbox/Toolbox.js","components/NoteFormField/NoteFormField.js","components/NoteForm/NoteForm.js","constants.js","components/NewNote/NewNote.js","components/ViewNote/ViewNote.js","components/NoteList/NoteList.js","components/FilterMessage/FilterMessage.js","redux/selectors/notes.js","components/EditNote/EditNote.js","components/FilterPage/Home.js","components/FilterPage/Archive.js","components/FilterPage/Bin.js","components/App/App.js","redux/enhancers/monitorReducer.js","redux/middleware/logger.js","redux/reducers/notes.js","redux/reducers/labels.js","redux/reducers/index.js","serviceWorker.js","index.js","redux/configureStore.js"],"names":["module","exports","Dropdown","mainButton","options","children","useState","isDropdownOpen","setIsDropdownOpen","menuRef","createRef","mainButtonRef","handleClose","e","current","contains","target","useEffect","document","addEventListener","removeEventListener","className","styles","container","type","ref","onClick","menu","map","option","index","name","optionFunction","key","handleOptionFunction","Search","searchQuery","setSearchQuery","search","icon","faSearch","placeholder","value","onChange","trim","toLowerCase","modalRoot","querySelector","Modal","onCloseModal","modal","createElement","setAttribute","isEqualNode","appendChild","removeChild","ReactDOM","createPortal","propTypes","PropTypes","element","isRequired","func","Settings","htmlFor","id","cancel","save","Header","props","isSettingsOpen","setIsSettingsOpen","header","iconSidebar","toggleSidebar","faBars","window","innerWidth","faSync","toggleNotesLayout","notesLayout","faThList","faTh","faCog","getSliceById","storedSlice","byId","getSlice","createSelector","allIds","getSliceIds","getLabels","state","labels","storedLabels","nextNoteId","addNote","title","content","color","isPinned","status","archiveNote","deleteNote","nextLabelId","connect","addLabel","label","deleteLabel","Sidebar","to","faLightbulb","fixedWidth","faBell","length","faHashtag","faEdit","faFolderOpen","faTrashAlt","FilterPage","COLORS","ColorPicker","onChangeNoteColor","activeColor","isOpen","setIsOpen","onMouseEnter","onMouseLeave","circle","faCircle","check","faCheck","inverse","transform","Toolbox","dropdownOptions","onArchiveNote","onPinNote","role","isEdit","isView","classToolbox","select","faCheckCircle","pin","faThumbtack","rotation","tools","faFillDrip","faEllipsisV","faUndoAlt","faRedoAlt","NoteFormField","isFocused","onSetField","autoFocus","NoteForm","onSetTitle","onSetContent","onSetColor","onSetIsPinned","onSubmit","noteFormRef","handleClick","Boolean","preventDefault","NOTE_STATUS","setColor","setTitle","setContent","setIsPinned","formIsActive","setFormIsActive","handleAddNote","validateForm","resetForm","dummyForm","onKeyDown","changeNoteColor","pinNote","note","noteRef","handleMouseHover","Note","newColor","NoteList","notes","styledNoteList","list","FilterMessage","extraMessage","message","getNotes","editNote","newTitle","setNewTitle","newContent","setNewContent","setNewColor","newIsPinned","setNewIsPinned","onSetFormIsActive","storedNotes","getNotesByStatus","_","arg","noteStatus","ACTIVE","ARCHIVED","DELETED","filter","getNotDeletedNotes","includes","App","isSidebarOpen","setIsSidebarOpen","setNotesLayout","isDarkThemeActive","setIsDarkThemeActive","style","backgroundColor","toggleDarkTheme","path","monitorReducerEnhancer","createStore","reducer","initialState","enhancer","action","number","start","performance","now","newState","end","diff","Math","round","console","log","logger","store","next","group","info","result","getState","groupEnd","1","2","3","4","combineReducers","noteId","labelId","concat","location","hostname","match","preloadedState","middlewares","loggerMiddleware","thunkMiddleware","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","rootReducer","configureStore","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e08c8d09.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbox\":\"Toolbox_Toolbox__1srVH\",\"select\":\"Toolbox_select__agP5k\",\"pin\":\"Toolbox_pin__1Zt5c\",\"tools\":\"Toolbox_tools__tl48N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ColorPicker_container__3kiQN\",\"menu\":\"ColorPicker_menu__UPYCI\",\"circle\":\"ColorPicker_circle__2ZQ7G\",\"check\":\"ColorPicker_check__AjX3J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Settings\":\"Settings_Settings__2psCG\",\"cancel\":\"Settings_cancel__2GyEJ\",\"save\":\"Settings_save__-zpVK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__c5TRD\",\"iconSidebar\":\"Header_iconSidebar__3Qf0H\",\"menuContainer\":\"Header_menuContainer__1prGr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Dropdown_container__uKi72\",\"menu\":\"Dropdown_menu__2I65P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sidebar\":\"Sidebar_Sidebar__1EjaY\",\"active\":\"Sidebar_active__ETTYX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NoteList\":\"NoteList_NoteList__16n8-\",\"list\":\"NoteList_list__205b6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ViewNote\":\"ViewNote_ViewNote__1tzWb\",\"labels\":\"ViewNote_labels__2PL_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__146Ef\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__2mctg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1c_b-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterPage\":\"FilterPage_FilterPage__1QQXS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dummyForm\":\"NewNote_dummyForm__2ok1t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NoteForm\":\"NoteForm_NoteForm__3IlpY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NoteFormField\":\"NoteFormField_NoteFormField__VZ0Qi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NoteBorder\":\"NoteBorder_NoteBorder__x1HkN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterMessage\":\"FilterMessage_FilterMessage__2iV8c\"};","import React, { createRef, useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Dropdown.module.scss\";\r\n\r\nconst Dropdown = ({ mainButton, options, children }) => {\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n  const menuRef = createRef();\r\n  const mainButtonRef = createRef();\r\n\r\n  function handleClose(e) {\r\n    if (\r\n      menuRef.current.contains(e.target) ||\r\n      mainButtonRef.current.contains(e.target)\r\n    ) {\r\n      return;\r\n    }\r\n    setIsDropdownOpen(false);\r\n  }\r\n\r\n  function handleOptionFunction(optionFunction) {\r\n    optionFunction();\r\n    // setIsDropdownOpen(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isDropdownOpen) {\r\n      document.addEventListener(\"mousedown\", handleClose);\r\n      return () => {\r\n        document.removeEventListener(\"mousedown\", handleClose);\r\n      };\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <button\r\n        type=\"button\"\r\n        ref={mainButtonRef}\r\n        onClick={() => setIsDropdownOpen(!isDropdownOpen)}\r\n      >\r\n        {mainButton}\r\n      </button>\r\n\r\n      {isDropdownOpen && (\r\n        <ul className={styles.menu} ref={menuRef}>\r\n          {options.map((option, index) => {\r\n            const [name, optionFunction] = option;\r\n            return (\r\n              <li key={index}>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => handleOptionFunction(optionFunction)}\r\n                >\r\n                  {name}\r\n                </button>\r\n              </li>\r\n            );\r\n          })}\r\n          {children}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nDropdown.propTypes = {\r\n  mainButton: PropTypes.element.isRequired,\r\n  options: PropTypes.arrayOf(PropTypes.array.isRequired).isRequired,\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default Dropdown;\r\n","import React, { createRef } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./Search.module.scss\";\r\n\r\nconst Search = ({ searchQuery, setSearchQuery }) => {\r\n  const search = createRef();\r\n  return (\r\n    <form className={styles.search}>\r\n      <button>\r\n        <FontAwesomeIcon icon={faSearch} />\r\n      </button>\r\n      <input\r\n        ref={search}\r\n        type=\"search\"\r\n        placeholder=\"Search\"\r\n        value={searchQuery}\r\n        onChange={() =>\r\n          setSearchQuery(search.current.value.trim().toLowerCase())\r\n        }\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nSearch.propTypes = {\r\n  searchQuery: PropTypes.string.isRequired,\r\n  setSearchQuery: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Search;\r\n","import { useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Modal.module.scss\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nconst Modal = ({ children, onCloseModal }) => {\r\n  const modal = document.createElement(\"div\");\r\n  modal.setAttribute(\"class\", styles.Modal);\r\n\r\n  const handleClose = e => {\r\n    if (modal.isEqualNode(e.target)) {\r\n      onCloseModal();\r\n    }\r\n  };\r\n\r\n  modal.addEventListener(\"click\", handleClose);\r\n\r\n  useEffect(() => {\r\n    modalRoot.appendChild(modal);\r\n    return () => {\r\n      modalRoot.removeChild(modal);\r\n    };\r\n  });\r\n  return ReactDOM.createPortal(children, modal);\r\n};\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  onCloseModal: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Modal from \"../Modal\";\r\nimport styles from \"./Settings.module.scss\";\r\n\r\nconst Settings = ({ onCloseModal }) => {\r\n  const handleSave = () => {\r\n    onCloseModal();\r\n  };\r\n\r\n  return (\r\n    <Modal onCloseModal={onCloseModal}>\r\n      <section className={styles.Settings}>\r\n        <h3>Settings</h3>\r\n        <section>\r\n          <h4>Notes and lists</h4>\r\n          <ul>\r\n            <li>\r\n              <label htmlFor=\"newItems\">Add new items to the bottom</label>\r\n              <input id=\"newItems\" type=\"checkbox\" />\r\n            </li>\r\n            <li>\r\n              <label htmlFor=\"tickedItems\">\r\n                Move ticked items to the bottom\r\n              </label>\r\n              <input id=\"tickedItems\" type=\"checkbox\" />\r\n            </li>\r\n            <li>\r\n              <label htmlFor=\"linkPreviews\">Display rich link previews</label>\r\n              <input id=\"linkPreviews\" type=\"checkbox\" />\r\n            </li>\r\n            <li>\r\n              <label htmlFor=\"darkTheme\">Enable dark theme</label>\r\n              <input id=\"darkTheme\" type=\"checkbox\" />\r\n            </li>\r\n          </ul>\r\n        </section>\r\n        <footer>\r\n          <button\r\n            className={styles.cancel}\r\n            type=\"button\"\r\n            onClick={onCloseModal}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button className={styles.save} type=\"button\" onClick={handleSave}>\r\n            Save\r\n          </button>\r\n        </footer>\r\n      </section>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nSettings.propTypes = {\r\n  onCloseModal: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Settings;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faSearch,\r\n  faCog,\r\n  faTh,\r\n  faThList,\r\n  faBars,\r\n  faSync\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport styles from \"./Header.module.scss\";\r\nimport Dropdown from \"../Dropdown/Dropdown\";\r\nimport Search from \"../../components/Search/Search\";\r\nimport Settings from \"../../components/Modal/Settings/Settings\";\r\n\r\nconst Header = props => {\r\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\r\n\r\n  return (\r\n    <header className={styles.header}>\r\n      {isSettingsOpen && (\r\n        <Settings onCloseModal={() => setIsSettingsOpen(false)} />\r\n      )}\r\n      <div>\r\n        <button\r\n          type=\"button\"\r\n          className={styles.iconSidebar}\r\n          onClick={props.toggleSidebar}\r\n        >\r\n          <FontAwesomeIcon icon={faBars} />\r\n        </button>\r\n        <h1>Notes</h1>\r\n      </div>\r\n      {window.innerWidth >= 768 && (\r\n        <Search\r\n          searchQuery={props.searchQuery}\r\n          setSearchQuery={props.setSearchQuery}\r\n        />\r\n      )}\r\n\r\n      <div>\r\n        {window.innerWidth < 768 && (\r\n          <button type=\"button\">\r\n            <FontAwesomeIcon icon={faSearch} />\r\n          </button>\r\n        )}\r\n        <button type=\"button\">\r\n          <FontAwesomeIcon icon={faSync} />\r\n        </button>\r\n        {window.innerWidth >= 600 && (\r\n          <button type=\"button\" onClick={props.toggleNotesLayout}>\r\n            <FontAwesomeIcon\r\n              icon={props.notesLayout === \"grid\" ? faThList : faTh}\r\n            />\r\n          </button>\r\n        )}\r\n\r\n        <Dropdown\r\n          mainButton={<FontAwesomeIcon icon={faCog} />}\r\n          options={[\r\n            [\"Settings\", () => setIsSettingsOpen(true)],\r\n            [\"Enable dark theme\"]\r\n          ]}\r\n        />\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  notesLayout: PropTypes.string.isRequired,\r\n  searchQuery: PropTypes.string.isRequired,\r\n  setSearchQuery: PropTypes.func.isRequired,\r\n  toggleDarkTheme: PropTypes.func.isRequired,\r\n  toggleNotesLayout: PropTypes.func.isRequired,\r\n  toggleSidebar: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const getSliceIds = storedSlice =>\r\n  storedSlice ? storedSlice.allIds : [];\r\nexport const getSliceById = (storedSlice, id) =>\r\n  storedSlice ? { ...storedSlice.byId[id] } : {};\r\n\r\nexport const getSlice = createSelector(\r\n  [storedSlice => storedSlice],\r\n  storedSlice =>\r\n    getSliceIds(storedSlice).map(id => getSliceById(storedSlice, id))\r\n);\r\n\r\n// export const getSlice = slice =>\r\n//   getSliceIds(slice).map(id => getSliceById(slice, id));\r\n","import { createSelector } from \"reselect\";\r\nimport { getSlice } from \"./generics\";\r\n\r\nconst getStoredLabels = state => state.labels;\r\n\r\nexport const getLabels = createSelector([getStoredLabels], storedLabels =>\r\n  getSlice(storedLabels)\r\n);\r\n","import {\r\n  ADD_NOTE,\r\n  EDIT_NOTE,\r\n  LABEL_NOTE,\r\n  ARCHIVE_NOTE,\r\n  CHANGE_NOTE_COLOR,\r\n  CHANGE_VISIBILITY_FILTER,\r\n  DELETE_NOTE,\r\n  PIN_NOTE,\r\n  SEARCH_NOTES,\r\n  ADD_LABEL,\r\n  DELETE_LABEL\r\n} from \"./actionTypes\";\r\n\r\n// notes\r\nlet nextNoteId = 4; // 0\r\nexport const addNote = (title, content, color, labels, isPinned, status) => ({\r\n  type: ADD_NOTE,\r\n  id: ++nextNoteId,\r\n  title,\r\n  content,\r\n  color,\r\n  labels,\r\n  isPinned,\r\n  status\r\n});\r\n\r\nexport const labelNote = (id, label) => ({\r\n  type: LABEL_NOTE,\r\n  id,\r\n  label\r\n});\r\nexport const editNote = (\r\n  id,\r\n  title,\r\n  content,\r\n  color,\r\n  labels,\r\n  isPinned,\r\n  status\r\n) => ({\r\n  type: EDIT_NOTE,\r\n  id,\r\n  title,\r\n  content,\r\n  color,\r\n  labels,\r\n  isPinned,\r\n  status\r\n});\r\nexport const archiveNote = id => ({ type: ARCHIVE_NOTE, id });\r\nexport const deleteNote = id => ({ type: DELETE_NOTE, id });\r\nexport const changeNoteColor = (id, color) => ({\r\n  type: CHANGE_NOTE_COLOR,\r\n  id,\r\n  color\r\n});\r\nexport const pinNote = id => ({ type: PIN_NOTE, id });\r\n\r\nexport const changeVisibilityFilter = filter => ({\r\n  type: CHANGE_VISIBILITY_FILTER,\r\n  filter\r\n});\r\n\r\nexport const searchNotes = searchQuery => ({\r\n  type: SEARCH_NOTES,\r\n  searchQuery\r\n});\r\n\r\n// labels\r\nlet nextLabelId = 3; // 0\r\nexport const addLabel = label => ({\r\n  type: ADD_LABEL,\r\n  id: ++nextLabelId,\r\n  label\r\n});\r\n\r\nexport const deleteLabel = id => ({ type: DELETE_LABEL, id });\r\n","// notes\r\nexport const ADD_NOTE = \"ADD_NOTE\";\r\nexport const EDIT_NOTE = \"EDIT_NOTE\";\r\nexport const LABEL_NOTE = \"ADD_NOTE_LABEL\";\r\nexport const ARCHIVE_NOTE = \"ARCHIVE_NOTE\";\r\nexport const CHANGE_NOTE_COLOR = \"CHANGE_NOTE_COLOR\";\r\nexport const PIN_NOTE = \"PIN_NOTE\";\r\nexport const DELETE_NOTE = \"DELETE_NOTE\";\r\n\r\nexport const SEARCH_NOTES = \"SEARCH_NOTES\";\r\nexport const REFRESH_NOTES = \"REFRESH_NOTES\";\r\n\r\nexport const CHANGE_VISIBILITY_FILTER = \"CHANGE_VISIBILITY_FILTER\";\r\n\r\n// labels\r\nexport const ADD_LABEL = \"ADD_LABEL\";\r\nexport const DELETE_LABEL = \"DELETE_LABEL\";\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faLightbulb,\r\n  faBell,\r\n  faTrashAlt,\r\n  faFolderOpen,\r\n  faEdit\r\n} from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faHashtag } from \"@fortawesome/free-solid-svg-icons\";\r\nimport styles from \"./Sidebar.module.scss\";\r\nimport { getLabels } from \"../../redux/selectors/labels\";\r\nimport { addLabel, deleteLabel } from \"../../redux/actions/actionCreators\";\r\n\r\nconst Sidebar = ({ labels, addLabel, deleteLabel }) => {\r\n  // console.warn('Sidebar')\r\n  return (\r\n    <aside className={styles.Sidebar}>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/home\">\r\n            <FontAwesomeIcon icon={faLightbulb} fixedWidth />\r\n            Notes\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/reminders\">\r\n            <FontAwesomeIcon icon={faBell} fixedWidth />\r\n            Reminders\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n      <section className={styles.labels}>\r\n        <h2>Labels</h2>\r\n        <ul>\r\n          {labels.length > 0 &&\r\n            labels.map(label => (\r\n              <li key={label.id}>\r\n                <Link to={`/label/${label.label}`}>\r\n                  <FontAwesomeIcon icon={faHashtag} fixedWidth /> {label.label}\r\n                </Link>\r\n              </li>\r\n            ))}\r\n\r\n          <li>\r\n            <button type=\"button\" onClick={() => addLabel(\"asf\")}>\r\n              <FontAwesomeIcon icon={faEdit} fixedWidth />\r\n              Edit labels\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </section>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/archive\">\r\n            <FontAwesomeIcon icon={faFolderOpen} fixedWidth />\r\n            Archive\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/bin\">\r\n            <FontAwesomeIcon icon={faTrashAlt} fixedWidth />\r\n            Bin\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </aside>\r\n  );\r\n};\r\n\r\nSidebar.propTypes = {\r\n  labels: PropTypes.array,\r\n  addLabel: PropTypes.func.isRequired,\r\n  deleteLabel: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  labels: getLabels(state)\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  addLabel,\r\n  deleteLabel\r\n})(Sidebar);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./FilterPage.module.scss\";\r\n\r\nconst FilterPage = ({ children }) => {\r\n  return <div className={styles.FilterPage}>{children}</div>;\r\n};\r\n\r\nFilterPage.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default FilterPage;\r\n","import React, { useState } from \"react\";\r\n// import { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCircle } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\nimport styles from \"./ColorPicker.module.scss\";\r\n// import { changeNoteColor } from \"../../redux/actions/actionCreators\";\r\n\r\nconst COLORS = [\r\n  \"white\",\r\n  \"red\",\r\n  \"orange\",\r\n  \"yellow\",\r\n  \"green\",\r\n  \"teal\",\r\n  \"blue\",\r\n  \"dark-blue\",\r\n  \"purple\",\r\n  \"pink\",\r\n  \"brown\",\r\n  \"grey\"\r\n];\r\n\r\nconst ColorPicker = ({ mainButton, onChangeNoteColor, activeColor }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  return (\r\n    <div\r\n      className={styles.container}\r\n      onMouseEnter={() => setIsOpen(true)}\r\n      onMouseLeave={() => setIsOpen(false)}\r\n    >\r\n      <button type=\"button\">{mainButton}</button>\r\n\r\n      {isOpen && (\r\n        <div className={styles.menu}>\r\n          <ul>\r\n            {COLORS.map((color, index) => {\r\n              return (\r\n                <li key={index}>\r\n                  <button\r\n                    type=\"button\"\r\n                    className={`${color} fa-layers`}\r\n                    onClick={() => onChangeNoteColor(color)}\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      className={styles.circle}\r\n                      icon={faCircle}\r\n                    />\r\n                    {activeColor === color && (\r\n                      <FontAwesomeIcon\r\n                        className={styles.check}\r\n                        icon={faCheck}\r\n                        inverse\r\n                        transform=\"shrink-8\"\r\n                      />\r\n                    )}\r\n                  </button>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nColorPicker.propTypes = {\r\n  mainButton: PropTypes.element.isRequired,\r\n  onChangeNoteColor: PropTypes.func.isRequired,\r\n  activeColor: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ColorPicker;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCheckCircle,\r\n  faThumbtack,\r\n  faFillDrip,\r\n  faEllipsisV,\r\n  faUndoAlt,\r\n  faRedoAlt\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faBell, faFolderOpen } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nimport styles from \"./Toolbox.module.scss\";\r\nimport ColorPicker from \"../ColorPicker/ColorPicker\";\r\nimport Dropdown from \"../Dropdown/Dropdown\";\r\n\r\nconst Toolbox = ({\r\n  activeColor,\r\n  children,\r\n  dropdownOptions,\r\n  isPinned,\r\n  onArchiveNote,\r\n  onChangeNoteColor,\r\n  onPinNote,\r\n  role\r\n}) => {\r\n  const isEdit = role === \"edit\";\r\n  const isView = role === \"view\";\r\n\r\n  let classToolbox = styles.Toolbox;\r\n  // if (isView) {\r\n  //   classToolbox += ` ${styles.hidden}`;\r\n  // }\r\n  return (\r\n    <div className={classToolbox}>\r\n      {isView && (\r\n        <button type=\"button\" className={styles.select}>\r\n          <FontAwesomeIcon icon={faCheckCircle} />\r\n        </button>\r\n      )}\r\n      <div>{children}</div>\r\n      <button type=\"button\" className={styles.pin} onClick={onPinNote}>\r\n        {isPinned ? (\r\n          <FontAwesomeIcon icon={faThumbtack} />\r\n        ) : (\r\n          <FontAwesomeIcon icon={faThumbtack} rotation={90} />\r\n        )}\r\n      </button>\r\n      <footer>\r\n        <div className={styles.tools}>\r\n          <button type=\"button\">\r\n            <FontAwesomeIcon icon={faBell} fixedWidth />\r\n          </button>\r\n          <ColorPicker\r\n            activeColor={activeColor}\r\n            mainButton={<FontAwesomeIcon icon={faFillDrip} fixedWidth />}\r\n            onChangeNoteColor={onChangeNoteColor}\r\n          />\r\n          <button type=\"button\" onClick={onArchiveNote}>\r\n            <FontAwesomeIcon icon={faFolderOpen} fixedWidth />\r\n          </button>\r\n          <Dropdown\r\n            mainButton={<FontAwesomeIcon icon={faEllipsisV} fixedWidth />}\r\n            options={dropdownOptions}\r\n          ></Dropdown>\r\n\r\n          {isEdit && (\r\n            <>\r\n              <button type=\"button\">\r\n                <FontAwesomeIcon icon={faUndoAlt} fixedWidth />\r\n              </button>\r\n              <button type=\"button\">\r\n                <FontAwesomeIcon icon={faRedoAlt} fixedWidth />\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n        {isEdit && <button>Close</button>}\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nToolbox.propTypes = {\r\n  activeColor: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  dropdownOptions: PropTypes.array.isRequired,\r\n  isPinned: PropTypes.bool.isRequired,\r\n  onArchiveNote: PropTypes.func.isRequired,\r\n  onChangeNoteColor: PropTypes.func.isRequired,\r\n  onPinNote: PropTypes.func.isRequired,\r\n  role: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Toolbox;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./NoteFormField.module.scss\";\r\n\r\nconst NoteFormField = ({ isFocused, name, placeholder, value, onSetField }) => {\r\n  return (\r\n    <textarea\r\n      className={styles.NoteFormField}\r\n      name={name}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onChange={onSetField}\r\n      // wrap=\"hard\"\r\n      autoFocus={isFocused}\r\n    />\r\n  );\r\n};\r\n\r\nNoteFormField.propTypes = {\r\n  isFocused: PropTypes.bool,\r\n  name: PropTypes.string,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string,\r\n  onSetField: PropTypes.func,\r\n};\r\n\r\nexport default NoteFormField;\r\n","import React, { createRef, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./NoteForm.module.scss\";\r\nimport Toolbox from \"../Toolbox/Toolbox\";\r\nimport NoteFormField from \"../NoteFormField/NoteFormField\";\r\n// import NoteBorder from \"../NoteBorder/NoteBorder\";\r\n\r\nconst NoteForm = ({\r\n  title,\r\n  content,\r\n  color,\r\n  isPinned,\r\n  onSetTitle,\r\n  onSetContent,\r\n  onSetColor,\r\n  onSetIsPinned,\r\n  onSubmit,\r\n  addNote,\r\n  archiveNote,\r\n  deleteNote\r\n}) => {\r\n  const noteFormRef = createRef();\r\n\r\n  useEffect(() => {\r\n    // console.log(Boolean(noteFormRef))\r\n    document.addEventListener(\"click\", handleClick);\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClick);\r\n    };\r\n  });\r\n\r\n  const handleClick = e => {\r\n    // console.log(!!noteFormRef)\r\n    if (noteFormRef.current && noteFormRef.current.contains(e.target)) return;\r\n    onSubmit();\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit();\r\n  };\r\n\r\n  const test = Boolean(title.trim() || content.trim());\r\n  let dropdownOptions = [[\"Add label\"]];\r\n  if (test) {\r\n    dropdownOptions = [\r\n      [\"Delete note\", deleteNote],\r\n      ...dropdownOptions,\r\n      [\"Make a copy\", addNote]\r\n    ];\r\n  }\r\n\r\n  return (\r\n    <form\r\n      name=\"noteForm\"\r\n      ref={noteFormRef}\r\n      onSubmit={handleSubmit}\r\n      className={`note ${styles.NoteForm} ${color}`}\r\n    >\r\n      <Toolbox\r\n        activeColor={color}\r\n        dropdownOptions={dropdownOptions}\r\n        role=\"edit\"\r\n        isPinned={isPinned}\r\n        onArchiveNote={archiveNote}\r\n        onChangeNoteColor={onSetColor}\r\n        onPinNote={onSetIsPinned}\r\n      >\r\n        <NoteFormField\r\n          name=\"title\"\r\n          placeholder=\"Title\"\r\n          value={title}\r\n          onSetField={e => onSetTitle(e.target.value)}\r\n        />\r\n        <NoteFormField\r\n          name=\"content\"\r\n          placeholder=\"Take a note...\"\r\n          value={content}\r\n          onSetField={e => onSetContent(e.target.value)}\r\n          isFocused\r\n        />\r\n      </Toolbox>\r\n    </form>\r\n  );\r\n};\r\n\r\nNoteForm.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  content: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  onSetTitle: PropTypes.func.isRequired,\r\n  onSetContent: PropTypes.func.isRequired,\r\n  onSetColor: PropTypes.func.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n  addNote: PropTypes.func.isRequired,\r\n  archiveNote: PropTypes.func.isRequired,\r\n  deleteNote: PropTypes.func.isRequired\r\n};\r\n\r\nexport default NoteForm;\r\n","export const NOTE_STATUS = {\r\n  ACTIVE: \"ACTIVE\",\r\n  ARCHIVED: \"ARCHIVED\",\r\n  DELETED: \"DELETED\"\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport styles from \"./NewNote.module.scss\";\r\nimport NoteForm from \"../NoteForm/NoteForm\";\r\nimport NoteFormField from \"../NoteFormField/NoteFormField\";\r\nimport NoteBorder from \"../NoteBorder/NoteBorder\";\r\nimport { addNote } from \"../../redux/actions/actionCreators\";\r\nimport { NOTE_STATUS } from \"../../constants\";\r\n\r\nconst NewNote = ({ addNote }) => {\r\n  const [color, setColor] = useState(\"white\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [isPinned, setIsPinned] = useState(false);\r\n  const [formIsActive, setFormIsActive] = useState(false);\r\n\r\n  const addNewNote = () => {\r\n    if (!validateForm()) {\r\n      resetForm();\r\n      return;\r\n    }\r\n    // handleAddNote(NOTE_STATUS.ACTIVE)\r\n    addNote(title, content, color, [], isPinned, NOTE_STATUS.ACTIVE);\r\n    resetForm();\r\n  };\r\n\r\n  const handleAddNote = status => {\r\n    if (!validateForm()) return;\r\n    // handleAddNote(status);\r\n    addNote(title, content, color, [], isPinned, status);\r\n    if (status === NOTE_STATUS.ACTIVE) return;\r\n    resetForm();\r\n  };\r\n\r\n  // const handleAddNote = status => {\r\n  //   addNote(title, content, color, [], isPinned, status);\r\n  // }\r\n\r\n  const validateForm = () => {\r\n    return !!(title.trim() || content.trim());\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setColor(\"white\");\r\n    setTitle(\"\");\r\n    setContent(\"\");\r\n    setIsPinned(false);\r\n    setFormIsActive(false);\r\n  };\r\n\r\n  // console.log('new', formIsActive);\r\n  return (\r\n    <>\r\n      {formIsActive ? (\r\n        <NoteForm\r\n          title={title}\r\n          content={content}\r\n          color={color}\r\n          isPinned={isPinned}\r\n          onSetTitle={setTitle}\r\n          onSetContent={setContent}\r\n          onSetColor={setColor}\r\n          onSetIsPinned={() => setIsPinned(!isPinned)}\r\n          onSubmit={addNewNote}\r\n          addNote={() => handleAddNote(NOTE_STATUS.ACTIVE)}\r\n          archiveNote={() => handleAddNote(NOTE_STATUS.ARCHIVED)}\r\n          deleteNote={() => handleAddNote(NOTE_STATUS.DELETED)}\r\n        />\r\n      ) : (\r\n        // <NoteBorder>\r\n        <form\r\n          className={`note ${styles.dummyForm}`}\r\n          onClick={() => setFormIsActive(true)}\r\n          onKeyDown={() => setFormIsActive(true)}\r\n        >\r\n          <input type=\"text\" placeholder=\"Take a note...\" />\r\n        </form>\r\n        /* </NoteBorder> */\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(null, { addNote })(NewNote);\r\n","import React, { createRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport styles from \"./ViewNote.module.scss\";\r\nimport Toolbox from \"../Toolbox/Toolbox\";\r\n\r\nimport {\r\n  addNote,\r\n  archiveNote,\r\n  changeNoteColor,\r\n  deleteNote,\r\n  pinNote\r\n} from \"../../redux/actions/actionCreators\";\r\n\r\nconst ViewNote = ({\r\n  addNote,\r\n  archiveNote,\r\n  changeNoteColor,\r\n  deleteNote,\r\n  note,\r\n  pinNote\r\n}) => {\r\n  const noteRef = createRef();\r\n  const { id, title, content, color, labels, isPinned, status } = note;\r\n\r\n  function handleMouseHover(e) {\r\n    // const toolbox = e.currentTarget.children[0].children;\r\n    // for (var tag of toolbox) {\r\n    //   if (tag.type === \"button\" || tag.tagName === \"FOOTER\") {\r\n    //     if (e.type === \"mouseenter\") {\r\n    //       tag.style.opacity = \"1\";\r\n    //     } else if (e.type === \"mouseleave\") {\r\n    //       tag.style.opacity = \"0\";\r\n    //     }\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      ref={noteRef}\r\n      className={`note ${styles.Note} ${color}`}\r\n      onMouseEnter={handleMouseHover}\r\n      onMouseLeave={handleMouseHover}\r\n    >\r\n      <Toolbox\r\n        activeColor={color}\r\n        dropdownOptions={[\r\n          [\"Delete note\", () => deleteNote(id)],\r\n          [\"Add label\"],\r\n          [\r\n            \"Make a copy\",\r\n            () => addNote(title, content, color, labels, isPinned, status)\r\n          ]\r\n        ]}\r\n        isPinned={isPinned}\r\n        onArchiveNote={() => archiveNote(id)}\r\n        onChangeNoteColor={newColor => changeNoteColor(id, newColor)}\r\n        onPinNote={() => pinNote(id)}\r\n        role=\"view\"\r\n      >\r\n        {title && <h3>{title}</h3>}\r\n        {content && <p>{content}</p>}\r\n        {labels.length > 0 && (\r\n          <ul className={styles.labels}>\r\n            {labels.map((label, index) => (\r\n              <li key={index}>{label}</li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </Toolbox>\r\n    </div>\r\n  );\r\n};\r\n\r\nViewNote.propTypes = {\r\n  note: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    content: PropTypes.string.isRequired,\r\n    color: PropTypes.string.isRequired,\r\n    labels: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\r\n    isPinned: PropTypes.bool.isRequired\r\n  }).isRequired,\r\n  addNote: PropTypes.func.isRequired,\r\n  archiveNote: PropTypes.func.isRequired,\r\n  changeNoteColor: PropTypes.func.isRequired,\r\n  deleteNote: PropTypes.func.isRequired,\r\n  pinNote: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, {\r\n  addNote,\r\n  archiveNote,\r\n  changeNoteColor,\r\n  deleteNote,\r\n  pinNote\r\n})(ViewNote);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./NoteList.module.scss\";\r\nimport ViewNote from \"../ViewNote/ViewNote\";\r\n\r\nconst NoteList = ({ notes, notesLayout }) => {\r\n  let styledNoteList = styles.NoteList;\r\n  if (notesLayout === \"list\") {\r\n    styledNoteList += ` ${styles.list}`;\r\n  }\r\n\r\n  return (\r\n    <div className={styledNoteList}>\r\n      {notes.map(note => {\r\n        return <ViewNote key={note.id} note={note} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nNoteList.propTypes = {\r\n  notes: PropTypes.oneOfType([\r\n    PropTypes.object.isRequired,\r\n    PropTypes.array.isRequired\r\n  ]).isRequired,\r\n  notesLayout: PropTypes.string.isRequired\r\n};\r\n\r\nexport default NoteList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./FilterMessage.module.scss\";\r\n\r\nconst FilterMessage = ({ extraMessage, icon, message }) => {\r\n  return (\r\n    <div className={styles.FilterMessage}>\r\n      <p>{extraMessage}</p>\r\n      <div>\r\n        {icon}\r\n        <p>{message}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilterMessage.propTypes = {\r\n  extraMessage: PropTypes.string,\r\n  icon: PropTypes.node.isRequired,\r\n  message: PropTypes.string.isRequired\r\n};\r\n\r\nexport default FilterMessage;\r\n","import { createSelector } from \"reselect\";\r\nimport {\r\n  getSlice\r\n  // getSliceIds, getSliceById\r\n} from \"./generics\";\r\nimport { NOTE_STATUS } from \"../../constants\";\r\n\r\n// const getStoredLabels = state => state.labels;\r\nconst getStoredNotes = state => state.notes;\r\n\r\n// const getNoteById = (storedNotes, storedLabels, id) => {\r\n//   const note = storedNotes.byId[id];\r\n//   return {\r\n//     ...note,\r\n//     labels: note.labels.map(\r\n//       labelId => getSliceById(storedLabels, labelId).label\r\n//     )\r\n//   };\r\n// };\r\n\r\n// const getNotes = createSelector(\r\n//   [getStoredNotes, getStoredLabels],\r\n//   (storedNotes, storedLabels) => {\r\n//     return getSliceIds(storedNotes).map(id =>\r\n//       getNoteById(storedNotes, storedLabels, id)\r\n//     );\r\n//   }\r\n// );\r\n\r\nexport const getNotes = createSelector([getStoredNotes], storedNotes =>\r\n  getSlice(storedNotes)\r\n);\r\n\r\nconst getSearchQuery = (_, props) => props.searchQuery;\r\n// const getNoteStatus = (_, props) => props.status;\r\nconst getArg = (_, arg) => arg;\r\n\r\nexport const getNotesByStatus = createSelector(\r\n  [getArg, getNotes],\r\n  (noteStatus, notes) => {\r\n    const { ACTIVE, ARCHIVED, DELETED } = NOTE_STATUS;\r\n\r\n    switch (noteStatus) {\r\n      case ACTIVE:\r\n        return notes.filter(note => note.status === ACTIVE);\r\n      case ARCHIVED:\r\n        return notes.filter(note => note.status === ARCHIVED);\r\n      case DELETED:\r\n        return notes.filter(note => note.status === DELETED);\r\n      // case search:\r\n      //   return notes.filter(\r\n      //     note =>\r\n      //       note.title.toLowerCase().includes(searchQuery) ||\r\n      //       (note.content.toLowerCase().includes(searchQuery) &&\r\n      //         note.status !== deleted)\r\n      //   );\r\n      // case labels:\r\n      //   console.log(visibilityFilter);\r\n      //   return notes;\r\n      // case reminders:\r\n      //   return notes;\r\n      default:\r\n        return notes;\r\n    }\r\n  }\r\n);\r\n\r\nconst getNotDeletedNotes = createSelector([getNotes], notes =>\r\n  notes.filter(note => note.status !== \"deleted\")\r\n);\r\n\r\nexport const getNotesBySearchQuery = createSelector(\r\n  [getNotDeletedNotes, getSearchQuery],\r\n  (notes, searchQuery) =>\r\n    notes.filter(\r\n      note =>\r\n        note.title.toLowerCase().includes(searchQuery) ||\r\n        note.content.toLowerCase().includes(searchQuery)\r\n    )\r\n);\r\n\r\n// export const getNotesByLabel = createSelector(\r\n//   [getNotDeletedNotes, label],\r\n//   (notDeletedNotes, label) =>\r\n//     notDeletedNotes.filter(note => note.labels.includes(label))\r\n// );\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\n// import Modal from \"../Modal/Modal\";\r\nimport NoteForm from \"../NoteForm/NoteForm\";\r\n\r\nimport {\r\n  addNote,\r\n  archiveNote,\r\n  editNote,\r\n  deleteNote\r\n} from \"../../redux/actions/actionCreators\";\r\n\r\nconst EditNote = ({ note, addNote, archiveNote, editNote, deleteNote }) => {\r\n  const { id, title, content, color, labels, isPinned, status } = note;\r\n  const [newTitle, setNewTitle] = useState(title);\r\n  const [newContent, setNewContent] = useState(content);\r\n  const [newColor, setNewColor] = useState(color);\r\n  const [newIsPinned, setNewIsPinned] = useState(isPinned);\r\n  const [formIsActive, setFormIsActive] = useState(false);\r\n\r\n  const handleEditNote = () => {\r\n    if (title !== newTitle || content !== newContent || color !== newColor) {\r\n      editNote(id, newTitle, newContent, newColor, labels, isPinned, status);\r\n    }\r\n    setFormIsActive(false);\r\n  };\r\n\r\n  // console.log('edit', formIsActive)\r\n  return (\r\n    // <Modal>\r\n    <NoteForm\r\n      formIsActive={formIsActive}\r\n      title={newTitle}\r\n      content={newContent}\r\n      color={newColor}\r\n      isPinned={newIsPinned}\r\n      onSetTitle={setNewTitle}\r\n      onSetContent={setNewContent}\r\n      onSetColor={setNewColor}\r\n      onSetIsPinned={() => setNewIsPinned(!newIsPinned)}\r\n      onSetFormIsActive={setFormIsActive}\r\n      onSubmit={handleEditNote}\r\n      addNote={() => addNote(title, content, color, labels, isPinned, status)}\r\n      archiveNote={() => archiveNote(id)}\r\n      deleteNote={() => deleteNote(id)}\r\n    />\r\n    // </Modal>\r\n  );\r\n};\r\n\r\nEditNote.propTypes = {\r\n  addNote: PropTypes.func.isRequired,\r\n  archiveNote: PropTypes.func.isRequired,\r\n  editNote: PropTypes.func.isRequired,\r\n  deleteNote: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addNote, archiveNote, editNote, deleteNote })(\r\n  EditNote\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLightbulb } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nimport FilterPage from \"./FilterPage\";\r\nimport NewNote from \"../NewNote/NewNote\";\r\nimport NoteList from \"../NoteList/NoteList\";\r\nimport FilterMessage from \"../FilterMessage/FilterMessage\";\r\nimport EditNote from \"../EditNote/EditNote\";\r\n\r\nimport { getNotesByStatus } from \"../../redux/selectors/notes\";\r\nimport { NOTE_STATUS } from \"../../constants\";\r\n\r\nconst Home = ({ notes, notesLayout }) => {\r\n  return (\r\n    <FilterPage>\r\n      <NewNote />\r\n      {/* <EditNote note={notes[0]} /> */}\r\n      {notes.length > 0 ? (\r\n        <NoteList notes={notes} notesLayout={notesLayout} />\r\n      ) : (\r\n        <FilterMessage\r\n          message=\"No notes yet\"\r\n          icon={<FontAwesomeIcon icon={faLightbulb} fixedWidth />}\r\n        />\r\n      )}\r\n    </FilterPage>\r\n  );\r\n};\r\n\r\nHome.propTypes = {\r\n  notes: PropTypes.array.isRequired,\r\n  notesLayout: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  notes: getNotesByStatus(state, NOTE_STATUS.ACTIVE)\r\n});\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFolderOpen } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nimport FilterPage from \"./FilterPage\";\r\nimport NoteList from \"../NoteList/NoteList\";\r\nimport FilterMessage from \"../FilterMessage/FilterMessage\";\r\n\r\nimport { getNotesByStatus } from \"../../redux/selectors/notes\";\r\nimport { NOTE_STATUS } from \"../../constants\";\r\n\r\nconst Archive = ({ notes, notesLayout }) => {\r\n  return (\r\n    <FilterPage>\r\n      {notes.length > 0 ? (\r\n        <NoteList notes={notes} notesLayout={notesLayout} />\r\n      ) : (\r\n        <FilterMessage\r\n          message=\"Your archived notes appear here\"\r\n          icon={<FontAwesomeIcon icon={faFolderOpen} fixedWidth />}\r\n        />\r\n      )}\r\n    </FilterPage>\r\n  );\r\n};\r\n\r\nArchive.propTypes = {\r\n  notes: PropTypes.array.isRequired,\r\n  notesLayout: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  notes: getNotesByStatus(state, NOTE_STATUS.ARCHIVED)\r\n});\r\n\r\nexport default connect(mapStateToProps)(Archive);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrashAlt } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nimport FilterPage from \"./FilterPage\";\r\nimport NoteList from \"../NoteList/NoteList\";\r\nimport FilterMessage from \"../FilterMessage/FilterMessage\";\r\n\r\nimport { getNotesByStatus } from \"../../redux/selectors/notes\";\r\nimport { NOTE_STATUS } from \"../../constants\";\r\n\r\nconst Bin = ({ notes, notesLayout }) => {\r\n  return (\r\n    <FilterPage>\r\n      {notes.length > 0 ? (\r\n        <NoteList notes={notes} notesLayout={notesLayout} />\r\n      ) : (\r\n        <FilterMessage\r\n          message=\"No notes in Recycle Bin\"\r\n          extraMessage=\"Notes in the Recycle Bin are deleted after 7 days.\"\r\n          icon={<FontAwesomeIcon icon={faTrashAlt} fixedWidth />}\r\n        />\r\n      )}\r\n    </FilterPage>\r\n  );\r\n};\r\n\r\nBin.propTypes = {\r\n  notes: PropTypes.array.isRequired,\r\n  notesLayout: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  notes: getNotesByStatus(state, NOTE_STATUS.DELETED)\r\n});\r\n\r\nexport default connect(mapStateToProps)(Bin);\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport styles from \"./App.module.scss\";\r\nimport Header from \"../Header/Header\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport Home from \"../FilterPage/Home\";\r\nimport Archive from \"../FilterPage/Archive\";\r\nimport Bin from \"../FilterPage/Bin\";\r\n\r\nfunction App() {\r\n  // console.warn('App')\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\r\n  const [notesLayout, setNotesLayout] = useState(\"list\");\r\n  const [isDarkThemeActive, setIsDarkThemeActive] = useState(false);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  // handleClick = e => {\r\n  //   const noteForm = document.forms.noteForm;\r\n  //   if (noteForm.contains(e.target)) return;\r\n  //   this.makeNote();\r\n  // };\r\n\r\n  return (\r\n    <Router>\r\n      <div\r\n        className={styles.App}\r\n        style={isDarkThemeActive ? { backgroundColor: \"pink\" } : null}\r\n        // onClick={handleClose}\r\n      >\r\n        <Header\r\n          notesLayout={notesLayout}\r\n          searchQuery={searchQuery}\r\n          setSearchQuery={setSearchQuery}\r\n          toggleDarkTheme={() => setIsDarkThemeActive(!isDarkThemeActive)}\r\n          toggleNotesLayout={() =>\r\n            setNotesLayout(notesLayout === \"list\" ? \"grid\" : \"list\")\r\n          }\r\n          toggleSidebar={() => setIsSidebarOpen(!isSidebarOpen)}\r\n        />\r\n        <main>\r\n          {window.innerWidth >= 1024 && isSidebarOpen && <Sidebar />}\r\n\r\n          <Switch>\r\n            <Route path=\"/home\">\r\n              <Home notesLayout={notesLayout} />\r\n            </Route>\r\n            <Route path=\"/archive\">\r\n              <Archive notesLayout={notesLayout} />\r\n            </Route>\r\n            <Route path=\"/bin\">\r\n              <Bin notesLayout={notesLayout} />\r\n            </Route>\r\n          </Switch>\r\n        </main>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const round = number => Math.round(number * 100) / 100;\r\n\r\nconst monitorReducerEnhancer = createStore => (\r\n  reducer,\r\n  initialState,\r\n  enhancer\r\n) => {\r\n  const monitorReducer = (state, action) => {\r\n    const start = performance.now();\r\n    const newState = reducer(state, action);\r\n    const end = performance.now();\r\n    const diff = round(end - start);\r\n\r\n    console.log(\"Reducer process time:\", diff);\r\n    return newState;\r\n  };\r\n  return createStore(monitorReducer, initialState, enhancer);\r\n};\r\n\r\nexport default monitorReducerEnhancer;\r\n","const logger = store => next => action => {\r\n  console.group(action.type);\r\n  console.info(\"dispatching\", action);\r\n  let result = next(action);\r\n  console.log(\"next state\", store.getState());\r\n  console.groupEnd();\r\n  return result;\r\n};\r\n\r\nexport default logger;\r\n","import { combineReducers } from \"redux\";\r\nimport {\r\n  ADD_NOTE,\r\n  EDIT_NOTE,\r\n  LABEL_NOTE,\r\n  ARCHIVE_NOTE,\r\n  CHANGE_NOTE_COLOR,\r\n  PIN_NOTE,\r\n  DELETE_NOTE\r\n} from \"../actions/actionTypes\";\r\nimport { NOTE_STATUS } from \"../../constants\";\r\n\r\nconst { ACTIVE, ARCHIVED, DELETED } = NOTE_STATUS;\r\n\r\nconst initialState = {\r\n  1: {\r\n    id: 1,\r\n    title: \"Project\",\r\n    content: \"gds active\",\r\n    color: \"orange\",\r\n    labels: [\"a\", \"b\"],\r\n    isPinned: true,\r\n    status: ACTIVE\r\n  },\r\n  2: {\r\n    id: 2,\r\n    title: \"\",\r\n    content: \"hrer archived\",\r\n    color: \"yellow\",\r\n    labels: [],\r\n    isPinned: false,\r\n    status: ARCHIVED\r\n  },\r\n  3: {\r\n    id: 3,\r\n    title: \"\",\r\n    content: \"erw deleted\",\r\n    color: \"green\",\r\n    labels: [],\r\n    isPinned: false,\r\n    status: ARCHIVED\r\n  },\r\n  4: {\r\n    id: 4,\r\n    title: \"\",\r\n    content: \"Qrsghh& active\",\r\n    color: \"pink\",\r\n    labels: [],\r\n    isPinned: false,\r\n    status: ACTIVE\r\n  }\r\n};\r\n\r\nconst allNotes = (state = [1, 2, 3, 4], action) => {\r\n  switch (action.type) {\r\n    case ADD_NOTE:\r\n      return [...state, action.id];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst notesById = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_NOTE: {\r\n      const { id, title, content, color, labels, isPinned, status } = action;\r\n      return {\r\n        ...state,\r\n        [id]: {\r\n          id,\r\n          title,\r\n          content,\r\n          color,\r\n          labels,\r\n          isPinned,\r\n          status\r\n        }\r\n      };\r\n    }\r\n    case ARCHIVE_NOTE: {\r\n      const { id } = action;\r\n      return {\r\n        ...state,\r\n        [id]: {\r\n          ...state[id],\r\n          isPinned: false,\r\n          status: ARCHIVED\r\n        }\r\n      };\r\n    }\r\n    case DELETE_NOTE: {\r\n      const { id } = action;\r\n      return {\r\n        ...state,\r\n        [id]: {\r\n          ...state[id],\r\n          isPinned: false,\r\n          status: DELETED\r\n        }\r\n      };\r\n    }\r\n    case EDIT_NOTE: {\r\n      const { id, title, content, color, labels, isPinned, status } = action;\r\n      return {\r\n        ...state,\r\n        [id]: {\r\n          id,\r\n          title,\r\n          content,\r\n          color,\r\n          labels,\r\n          isPinned,\r\n          status\r\n        }\r\n      }\r\n    }\r\n    case CHANGE_NOTE_COLOR: {\r\n      const { id, color } = action;\r\n      return {\r\n        ...state,\r\n        [id]: {\r\n          ...state[id],\r\n          color\r\n        }\r\n      };\r\n    }\r\n    case LABEL_NOTE: {\r\n      const { noteId, labelId } = action;\r\n      const note = state[noteId];\r\n      return {\r\n        ...state,\r\n        [noteId]: {\r\n          ...note,\r\n          labels: note.labels.concat(labelId)\r\n        }\r\n      };\r\n    }\r\n    case PIN_NOTE: {\r\n      const { id } = action;\r\n      const note = state[id];\r\n      return {\r\n        ...state,\r\n        [id]: {\r\n          ...note,\r\n          isPinned: !note.isPinned\r\n        }\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({ allIds: allNotes, byId: notesById });\r\n","import { combineReducers } from \"redux\";\r\nimport { ADD_LABEL, DELETE_LABEL } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  1: {\r\n    id: 1,\r\n    label: \"zzz\",\r\n    notes: [1, 3]\r\n  },\r\n  2: {\r\n    id: 2,\r\n    label: \"abc\",\r\n    notes: [1, 2]\r\n  },\r\n  3: {\r\n    id: 3,\r\n    label: \"bbbb\",\r\n    notes: []\r\n  }\r\n};\r\n\r\nconst allLabels = (state = [1, 2, 3], action) => {\r\n  switch (action.type) {\r\n    case ADD_LABEL:\r\n      return [...state, action.id];\r\n    case DELETE_LABEL:\r\n      return [...state.filter(id => action.id !== id)];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst labelsById = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_LABEL: {\r\n      const { id, label } = action;\r\n      return {\r\n        ...state,\r\n        [id]: {\r\n          id,\r\n          label,\r\n          notes: []\r\n        }\r\n      };\r\n    }\r\n    case DELETE_LABEL: {\r\n      const { id } = action;\r\n      const newState = { ...state };\r\n      delete newState[id];\r\n      return newState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  allIds: allLabels,\r\n  byId: labelsById\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport notes from \"./notes\";\r\nimport labels from \"./labels\";\r\n\r\nexport default combineReducers({\r\n  notes,\r\n  labels\r\n});\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App/App\";\nimport configureStore from \"./redux/configureStore\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = configureStore();\n\nconst renderApp = () =>\n  render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"app-root\")\n  );\n\n// if (process.env.NOTE_ENV !== \"production\" && module.hot) {\n//   module.hot.accept(\"./components/App/App\", renderApp);\n// }\nrenderApp();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport monitorReducerEnhancer from \"./enhancers/monitorReducer\";\r\nimport loggerMiddleware from \"./middleware/logger\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default function configureStore(preloadedState) {\r\n  const middlewares = [loggerMiddleware, thunkMiddleware];\r\n  const middlewaresEnhancer = applyMiddleware(...middlewares);\r\n\r\n  const enhancers = [middlewaresEnhancer, monitorReducerEnhancer];\r\n  const composedEnhancers = composeWithDevTools(...enhancers);\r\n  const store = createStore(rootReducer, preloadedState, composedEnhancers);\r\n\r\n  // if (process.env.NOTE_ENV !== \"production\" && module.hot) {\r\n  //   module.hot.accept(\"./reducers/reducers\", () =>\r\n  //     store.replaceReducer(rootReducer)\r\n  //   );\r\n  // }\r\n\r\n  return store;\r\n}\r\n"],"sourceRoot":""}