{"version":3,"sources":["components/NoteFormField/NoteFormField.module.scss","components/FilterMessage/FilterMessage.module.scss","components/Search/Search.js","components/Settings/Settings.js","components/Menu/Menu.js","components/Header/Header.js","components/EditLabels/EditLabels.js","redux/selectors/generics.js","redux/selectors/labels.js","redux/actions/actionCreators.js","redux/actions/actionTypes.js","components/Sidebar/Sidebar.js","components/FilterPage/FilterPage.js","components/ColorPicker/ColorPicker.js","components/Toolbox/Toolbox.js","components/NoteFormField/NoteFormField.js","components/NoteForm/NoteForm.js","constants.js","components/NewNote/NewNote.js","components/EditNote/EditNote.js","components/Note/Note.js","components/NoteList/NoteList.js","components/FilterMessage/FilterMessage.js","redux/selectors/notes.js","components/FilterPage/Home.js","components/FilterPage/Archive.js","components/FilterPage/Bin.js","components/App/App.js","redux/enhancers/monitorReducer.js","redux/middleware/logger.js","redux/reducers/notes.js","redux/reducers/labels.js","redux/reducers/index.js","serviceWorker.js","index.js","redux/configureStore.js","components/Toolbox/Toolbox.module.scss","components/Settings/Settings.module.scss","components/ColorPicker/ColorPicker.module.scss","components/Note/Note.module.scss","components/Header/Header.module.scss","components/Menu/Menu.module.scss","components/Sidebar/Sidebar.module.scss","components/NoteForm/NoteForm.module.scss","components/NoteList/NoteList.module.scss","components/App/App.module.scss","components/Search/Search.module.scss","components/FilterPage/FilterPage.module.scss","components/NewNote/NewNote.module.scss"],"names":["module","exports","Search","searchQuery","setSearchQuery","search","createRef","className","styles","IconButton","ref","type","placeholder","value","onChange","current","trim","toLowerCase","Settings","open","onClose","Dialog","htmlFor","id","cancel","onClick","save","Menu","icon","options","title","useState","setOpen","anchorRef","useRef","handleClose","event","contains","target","handleListKeyDown","key","preventDefault","prevOpen","useEffect","focus","root","Tooltip","aria-label","aria-controls","undefined","aria-haspopup","Popper","anchorEl","role","transition","placement","TransitionProps","Fade","timeout","Paper","paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","map","option","optionTitle","optionFunction","MenuItem","handleOptionFunction","Header","props","isSettingsOpen","setIsSettingsOpen","header","iconSidebar","toggleSidebar","window","innerWidth","toggleNotesLayout","notesLayout","EditLabels","labels","aria-labelledby","DialogTitle","DialogContent","List","ListItem","Input","autoFocus","label","DialogActions","Button","getSliceById","storedSlice","byId","getSlice","createSelector","allIds","getSliceIds","getLabels","state","storedLabels","nextNoteId","addNote","content","color","isPinned","status","archiveNote","deleteNote","nextLabelId","connect","addLabel","deleteLabel","dialogIsOpen","setDialogIsOpen","Sidebar","to","length","FilterPage","children","COLORS","ColorPicker","mainButton","onChangeNoteColor","activeColor","isOpen","setIsOpen","container","onMouseEnter","onMouseLeave","menu","index","Toolbox","dropdownOptions","onArchiveNote","onPinNote","isEdit","isView","classToolbox","select","pin","tools","NoteFormField","isFocused","name","onSetField","NoteForm","onSetTitle","onSetContent","onSetColor","onSetIsPinned","onSubmit","noteFormRef","document","addEventListener","handleClick","removeEventListener","e","Boolean","NOTE_STATUS","setColor","setTitle","setContent","setIsPinned","formIsActive","setFormIsActive","handleAddNote","validateForm","resetForm","dummyForm","editNote","note","onSetNoteIsEditable","newTitle","setNewTitle","newContent","setNewContent","newColor","setNewColor","newIsPinned","setNewIsPinned","changeNoteColor","pinNote","noteRef","handleMouseHover","Note","NoteList","notes","styledNoteList","list","FilterMessage","extraMessage","message","getNotes","storedNotes","getNotesByStatus","_","arg","noteStatus","ACTIVE","ARCHIVED","DELETED","filter","getNotDeletedNotes","includes","theme","createMuiTheme","MuiButtonBase","disableRipple","App","isSidebarOpen","setIsSidebarOpen","setNotesLayout","isDarkThemeActive","setIsDarkThemeActive","StylesProvider","injectFirst","ThemeProvider","CssBaseline","style","backgroundColor","toggleDarkTheme","path","monitorReducerEnhancer","createStore","reducer","initialState","enhancer","action","number","start","performance","now","newState","end","diff","Math","round","console","log","logger","store","next","group","info","result","getState","groupEnd","1","2","3","4","combineReducers","noteId","labelId","concat","location","hostname","match","preloadedState","middlewares","loggerMiddleware","thunkMiddleware","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","rootReducer","configureStore","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5f2ed239.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"NoteFormField\":\"NoteFormField_NoteFormField__VZ0Qi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterMessage\":\"FilterMessage_FilterMessage__2iV8c\"};","import React, { createRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nimport styles from \"./Search.module.scss\";\r\n\r\nconst Search = ({ searchQuery, setSearchQuery }) => {\r\n  const search = createRef();\r\n  return (\r\n    <form className={styles.search}>\r\n      <IconButton>\r\n        <SearchIcon />\r\n      </IconButton>\r\n      <input\r\n        ref={search}\r\n        type=\"search\"\r\n        placeholder=\"Search\"\r\n        value={searchQuery}\r\n        onChange={() =>\r\n          setSearchQuery(search.current.value.trim().toLowerCase())\r\n        }\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nSearch.propTypes = {\r\n  searchQuery: PropTypes.string.isRequired,\r\n  setSearchQuery: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport styles from \"./Settings.module.scss\";\r\n\r\nconst Settings = ({ open, onClose }) => {\r\n  const handleSave = () => {\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose}>\r\n      <section className={styles.Settings}>\r\n        <h3>Settings</h3>\r\n        <section>\r\n          <h4>Notes and lists</h4>\r\n          <ul>\r\n            <li>\r\n              <label htmlFor=\"newItems\">Add new items to the bottom</label>\r\n              <input id=\"newItems\" type=\"checkbox\" />\r\n            </li>\r\n            <li>\r\n              <label htmlFor=\"tickedItems\">\r\n                Move ticked items to the bottom\r\n              </label>\r\n              <input id=\"tickedItems\" type=\"checkbox\" />\r\n            </li>\r\n            <li>\r\n              <label htmlFor=\"linkPreviews\">Display rich link previews</label>\r\n              <input id=\"linkPreviews\" type=\"checkbox\" />\r\n            </li>\r\n            <li>\r\n              <label htmlFor=\"darkTheme\">Enable dark theme</label>\r\n              <input id=\"darkTheme\" type=\"checkbox\" />\r\n            </li>\r\n          </ul>\r\n        </section>\r\n        <footer>\r\n          <button className={styles.cancel} type=\"button\" onClick={onClose}>\r\n            Cancel\r\n          </button>\r\n          <button className={styles.save} type=\"button\" onClick={handleSave}>\r\n            Save\r\n          </button>\r\n        </footer>\r\n      </section>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nSettings.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Settings;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\n\r\nimport styles from \"./Menu.module.scss\";\r\n\r\nconst Menu = ({ icon, options, title }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const anchorRef = useRef(null);\r\n\r\n  const handleToggle = () => {\r\n    setOpen(prevOpen => !prevOpen);\r\n  };\r\n\r\n  const handleClose = event => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleListKeyDown = event => {\r\n    if (event.key === \"Tab\" || event.key === \"Escape\") {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  const prevOpen = useRef(open);\r\n  useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  const handleOptionFunction = optionFunction => {\r\n    optionFunction();\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      <Tooltip title={title}>\r\n        <IconButton\r\n          aria-label={title}\r\n          ref={anchorRef}\r\n          onClick={handleToggle}\r\n          aria-controls={open ? \"menu-list-fade\" : undefined}\r\n          aria-haspopup=\"true\"\r\n        >\r\n          {icon}\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Popper\r\n        open={open}\r\n        anchorEl={anchorRef.current}\r\n        role={undefined}\r\n        transition\r\n        placement={\"bottom-start\"}\r\n      >\r\n        {({ TransitionProps }) => (\r\n          <Fade {...TransitionProps} timeout={100}>\r\n            <Paper className={styles.paper}>\r\n              <ClickAwayListener onClickAway={handleClose}>\r\n                <MenuList\r\n                  autoFocusItem={open}\r\n                  id=\"menu-list-fade\"\r\n                  onKeyDown={handleListKeyDown}\r\n                >\r\n                  {options.map(option => {\r\n                    const [optionTitle, optionFunction] = option;\r\n                    return (\r\n                      <MenuItem\r\n                        key={optionTitle}\r\n                        onClick={() => handleOptionFunction(optionFunction)}\r\n                      >\r\n                        {optionTitle}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n                </MenuList>\r\n              </ClickAwayListener>\r\n            </Paper>\r\n          </Fade>\r\n        )}\r\n      </Popper>\r\n    </div>\r\n  );\r\n};\r\n\r\nMenu.propTypes = {\r\n  icon: PropTypes.element.isRequired,\r\n  options: PropTypes.arrayOf(PropTypes.array.isRequired).isRequired,\r\n  title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Menu;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ViewAgendaOutlinedIcon from \"@material-ui/icons/ViewAgendaOutlined\";\r\nimport DashboardOutlinedIcon from \"@material-ui/icons/DashboardOutlined\";\r\nimport SettingsOutlinedIcon from \"@material-ui/icons/SettingsOutlined\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\n\r\nimport styles from \"./Header.module.scss\";\r\nimport Search from \"../../components/Search/Search\";\r\nimport Settings from \"../Settings/Settings\";\r\nimport Menu from \"../Menu/Menu\";\r\n\r\nconst Header = props => {\r\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\r\n\r\n  return (\r\n    <header className={styles.header}>\r\n      <Settings\r\n        open={isSettingsOpen}\r\n        onClose={() => setIsSettingsOpen(false)}\r\n      />\r\n      <div>\r\n        <Tooltip title=\"Main menu\">\r\n          <IconButton\r\n            className={styles.iconSidebar}\r\n            onClick={props.toggleSidebar}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n        <h1>Notes</h1>\r\n      </div>\r\n      {window.innerWidth >= 768 && (\r\n        <Search\r\n          searchQuery={props.searchQuery}\r\n          setSearchQuery={props.setSearchQuery}\r\n        />\r\n      )}\r\n\r\n      <div>\r\n        {window.innerWidth < 768 && (\r\n          <IconButton>\r\n            <SearchIcon />\r\n          </IconButton>\r\n        )}\r\n        <Tooltip title=\"Refresh\" open={true}>\r\n          <IconButton aria-label=\"Refresh\">\r\n            <RefreshIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n        {window.innerWidth >= 600 && (\r\n          <Tooltip title=\"Toggle Layout\">\r\n            <IconButton\r\n              aria-label=\"Toggle Layout\"\r\n              onClick={props.toggleNotesLayout}\r\n            >\r\n              {props.notesLayout === \"grid\" ? (\r\n                <ViewAgendaOutlinedIcon />\r\n              ) : (\r\n                <DashboardOutlinedIcon />\r\n              )}\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n\r\n        <Menu\r\n          icon={<SettingsOutlinedIcon />}\r\n          options={[\r\n            [\"Settings\", () => setIsSettingsOpen(true)],\r\n            [\"Enable dark theme\"]\r\n          ]}\r\n          title=\"Settings\"\r\n        />\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  notesLayout: PropTypes.string.isRequired,\r\n  searchQuery: PropTypes.string.isRequired,\r\n  setSearchQuery: PropTypes.func.isRequired,\r\n  toggleDarkTheme: PropTypes.func.isRequired,\r\n  toggleNotesLayout: PropTypes.func.isRequired,\r\n  toggleSidebar: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\n\r\nconst EditLabels = ({ labels, open, onClose }) => {\r\n  return (\r\n    <Dialog open={open} aria-labelledby=\"edit-labels-dialog\" onClose={onClose}>\r\n      <DialogTitle id=\"edit-labels-dialog\">Edit Labels</DialogTitle>\r\n      <DialogContent>\r\n        <List>\r\n          <ListItem>\r\n            <Tooltip title=\"Cancel\">\r\n              <IconButton aria-label=\"Cancel\">\r\n                <ClearIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Input id=\"create-label\" autoFocus placeholder=\"Create new label\" />\r\n            <Tooltip title=\"Create label\">\r\n              <IconButton aria-label=\"Create label\">\r\n                <DoneIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </ListItem>\r\n          {labels &&\r\n            labels.map(label => (\r\n              <ListItem key={label.id}>\r\n                <Tooltip title=\"Delete label\">\r\n                  <IconButton aria-label=\"Delete label\">\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </Tooltip>\r\n                <Input id=\"label\" placeholder='Enter label name' />\r\n                <Tooltip title=\"Rename label\">\r\n                  <IconButton aria-label=\"Rename label\">\r\n                    <CreateIcon />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </ListItem>\r\n            ))}\r\n        </List>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose}>Done</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nEditLabels.propTypes = {\r\n  labels: PropTypes.array,\r\n  open: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default EditLabels;\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const getSliceIds = storedSlice =>\r\n  storedSlice ? storedSlice.allIds : [];\r\nexport const getSliceById = (storedSlice, id) =>\r\n  storedSlice ? { ...storedSlice.byId[id] } : {};\r\n\r\nexport const getSlice = createSelector(\r\n  [storedSlice => storedSlice],\r\n  storedSlice =>\r\n    getSliceIds(storedSlice).map(id => getSliceById(storedSlice, id))\r\n);\r\n\r\n// export const getSlice = slice =>\r\n//   getSliceIds(slice).map(id => getSliceById(slice, id));\r\n","import { createSelector } from \"reselect\";\r\nimport { getSlice } from \"./generics\";\r\n\r\nconst getStoredLabels = state => state.labels;\r\n\r\nexport const getLabels = createSelector([getStoredLabels], storedLabels =>\r\n  getSlice(storedLabels)\r\n);\r\n","import {\r\n  ADD_NOTE,\r\n  EDIT_NOTE,\r\n  LABEL_NOTE,\r\n  ARCHIVE_NOTE,\r\n  CHANGE_NOTE_COLOR,\r\n  CHANGE_VISIBILITY_FILTER,\r\n  DELETE_NOTE,\r\n  PIN_NOTE,\r\n  SEARCH_NOTES,\r\n  ADD_LABEL,\r\n  DELETE_LABEL\r\n} from \"./actionTypes\";\r\n\r\n// notes\r\nlet nextNoteId = 4; // 0\r\nexport const addNote = (title, content, color, labels, isPinned, status) => ({\r\n  type: ADD_NOTE,\r\n  id: ++nextNoteId,\r\n  title,\r\n  content,\r\n  color,\r\n  labels,\r\n  isPinned,\r\n  status\r\n});\r\n\r\nexport const labelNote = (id, label) => ({\r\n  type: LABEL_NOTE,\r\n  id,\r\n  label\r\n});\r\nexport const editNote = (\r\n  id,\r\n  title,\r\n  content,\r\n  color,\r\n  labels,\r\n  isPinned,\r\n  status\r\n) => ({\r\n  type: EDIT_NOTE,\r\n  id,\r\n  title,\r\n  content,\r\n  color,\r\n  labels,\r\n  isPinned,\r\n  status\r\n});\r\nexport const archiveNote = id => ({ type: ARCHIVE_NOTE, id });\r\nexport const deleteNote = id => ({ type: DELETE_NOTE, id });\r\nexport const changeNoteColor = (id, color) => ({\r\n  type: CHANGE_NOTE_COLOR,\r\n  id,\r\n  color\r\n});\r\nexport const pinNote = id => ({ type: PIN_NOTE, id });\r\n\r\nexport const changeVisibilityFilter = filter => ({\r\n  type: CHANGE_VISIBILITY_FILTER,\r\n  filter\r\n});\r\n\r\nexport const searchNotes = searchQuery => ({\r\n  type: SEARCH_NOTES,\r\n  searchQuery\r\n});\r\n\r\n// labels\r\nlet nextLabelId = 3; // 0\r\nexport const addLabel = label => ({\r\n  type: ADD_LABEL,\r\n  id: ++nextLabelId,\r\n  label\r\n});\r\n\r\nexport const deleteLabel = id => ({ type: DELETE_LABEL, id });\r\n","// notes\r\nexport const ADD_NOTE = \"ADD_NOTE\";\r\nexport const EDIT_NOTE = \"EDIT_NOTE\";\r\nexport const LABEL_NOTE = \"ADD_NOTE_LABEL\";\r\nexport const ARCHIVE_NOTE = \"ARCHIVE_NOTE\";\r\nexport const CHANGE_NOTE_COLOR = \"CHANGE_NOTE_COLOR\";\r\nexport const PIN_NOTE = \"PIN_NOTE\";\r\nexport const DELETE_NOTE = \"DELETE_NOTE\";\r\n\r\nexport const SEARCH_NOTES = \"SEARCH_NOTES\";\r\nexport const REFRESH_NOTES = \"REFRESH_NOTES\";\r\n\r\nexport const CHANGE_VISIBILITY_FILTER = \"CHANGE_VISIBILITY_FILTER\";\r\n\r\n// labels\r\nexport const ADD_LABEL = \"ADD_LABEL\";\r\nexport const DELETE_LABEL = \"DELETE_LABEL\";\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport EmojiObjectsOutlinedIcon from \"@material-ui/icons/EmojiObjectsOutlined\";\r\nimport NotificationsOutlinedIcon from \"@material-ui/icons/NotificationsOutlined\";\r\nimport LabelOutlinedIcon from \"@material-ui/icons/LabelOutlined\";\r\nimport CreateOutlinedIcon from \"@material-ui/icons/CreateOutlined\";\r\nimport ArchiveOutlinedIcon from \"@material-ui/icons/ArchiveOutlined\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\n\r\nimport styles from \"./Sidebar.module.scss\";\r\nimport EditLabels from \"../EditLabels/EditLabels\";\r\nimport { getLabels } from \"../../redux/selectors/labels\";\r\nimport { addLabel, deleteLabel } from \"../../redux/actions/actionCreators\";\r\n\r\nconst Sidebar = ({ labels, addLabel, deleteLabel }) => {\r\n  const [dialogIsOpen, setDialogIsOpen] = useState(false);\r\n  // console.warn('Sidebar')\r\n  return (\r\n    <aside className={styles.Sidebar}>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/home\">\r\n            <EmojiObjectsOutlinedIcon />\r\n            Notes\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/reminders\">\r\n            <NotificationsOutlinedIcon />\r\n            Reminders\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n      <section className={styles.labels}>\r\n        <h2>Labels</h2>\r\n        <ul>\r\n          {labels.length > 0 &&\r\n            labels.map(label => (\r\n              <li key={label.id}>\r\n                <Link to={`/label/${label.label}`}>\r\n                  <LabelOutlinedIcon /> {label.label}\r\n                </Link>\r\n              </li>\r\n            ))}\r\n\r\n          <li>\r\n            <button type=\"button\" onClick={() => setDialogIsOpen(true)}>\r\n              <CreateOutlinedIcon />\r\n              Edit labels\r\n            </button>\r\n          </li>\r\n          <EditLabels\r\n            open={dialogIsOpen}\r\n            onClose={() => setDialogIsOpen(false)}\r\n            labels={labels}\r\n          />\r\n        </ul>\r\n      </section>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/archive\">\r\n            <ArchiveOutlinedIcon />\r\n            Archive\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/bin\">\r\n            <DeleteOutlinedIcon />\r\n            Bin\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </aside>\r\n  );\r\n};\r\n\r\nSidebar.propTypes = {\r\n  labels: PropTypes.array,\r\n  addLabel: PropTypes.func.isRequired,\r\n  deleteLabel: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  labels: getLabels(state)\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  addLabel,\r\n  deleteLabel\r\n})(Sidebar);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./FilterPage.module.scss\";\r\n\r\nconst FilterPage = ({ children }) => {\r\n  return <div className={styles.FilterPage}>{children}</div>;\r\n};\r\n\r\nFilterPage.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default FilterPage;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport RadioButtonUncheckedIcon from \"@material-ui/icons/RadioButtonUnchecked\";\r\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\r\n\r\nimport styles from \"./ColorPicker.module.scss\";\r\n\r\nconst COLORS = [\r\n  \"white\",\r\n  \"red\",\r\n  \"orange\",\r\n  \"yellow\",\r\n  \"green\",\r\n  \"teal\",\r\n  \"blue\",\r\n  \"dark-blue\",\r\n  \"purple\",\r\n  \"pink\",\r\n  \"brown\",\r\n  \"grey\"\r\n];\r\n\r\nconst ColorPicker = ({ mainButton, onChangeNoteColor, activeColor }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  return (\r\n    // <ThemeProvider theme={theme} >\r\n    <div\r\n      className={styles.container}\r\n      onMouseEnter={() => setIsOpen(true)}\r\n      onMouseLeave={() => setIsOpen(false)}\r\n    >\r\n      <Tooltip title=\"Change colour\">\r\n        <IconButton>{mainButton}</IconButton>\r\n      </Tooltip>\r\n\r\n      {isOpen && (\r\n        <div className={styles.menu}>\r\n          <ul>\r\n            {COLORS.map((color, index) => {\r\n              return (\r\n                <li key={index}>\r\n                  <IconButton\r\n                    // classes={{root: styles[color]}}\r\n                    className={styles[color]}\r\n                    onClick={() => onChangeNoteColor(color)}\r\n                  >\r\n                    {activeColor === color ? (\r\n                      <CheckCircleOutlineIcon />\r\n                    ) : (\r\n                      <RadioButtonUncheckedIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n    /* </ThemeProvider> */\r\n  );\r\n};\r\n\r\nColorPicker.propTypes = {\r\n  mainButton: PropTypes.element.isRequired,\r\n  onChangeNoteColor: PropTypes.func.isRequired,\r\n  activeColor: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ColorPicker;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport AddAlertOutlinedIcon from \"@material-ui/icons/AddAlertOutlined\";\r\nimport PaletteOutlinedIcon from \"@material-ui/icons/PaletteOutlined\";\r\nimport UnarchiveOutlinedIcon from \"@material-ui/icons/UnarchiveOutlined\";\r\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport UndoIcon from \"@material-ui/icons/Undo\";\r\nimport RedoIcon from \"@material-ui/icons/RedoOutlined\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nimport styles from \"./Toolbox.module.scss\";\r\nimport ColorPicker from \"../ColorPicker/ColorPicker\";\r\nimport Menu from \"../Menu/Menu\";\r\n\r\nconst Toolbox = ({\r\n  activeColor,\r\n  children,\r\n  dropdownOptions,\r\n  isPinned,\r\n  onArchiveNote,\r\n  onChangeNoteColor,\r\n  onPinNote,\r\n  role\r\n}) => {\r\n  const isEdit = role === \"edit\";\r\n  const isView = role === \"view\";\r\n\r\n  let classToolbox = styles.Toolbox;\r\n  // if (isView) {\r\n  //   classToolbox += ` ${styles.hidden}`;\r\n  // }\r\n  return (\r\n    <div className={classToolbox}>\r\n      {isView && (\r\n        <IconButton className={styles.select}>\r\n          <CheckCircleIcon />\r\n        </IconButton>\r\n      )}\r\n      <div>{children}</div>\r\n      <IconButton className={styles.pin} onClick={onPinNote}>\r\n        {isPinned ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\r\n      </IconButton>\r\n      <footer>\r\n        <div className={styles.tools}>\r\n          <Tooltip title=\"Remind me\">\r\n            <IconButton aria-label=\"Remind me\">\r\n              <AddAlertOutlinedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <ColorPicker\r\n            activeColor={activeColor}\r\n            mainButton={<PaletteOutlinedIcon />}\r\n            onChangeNoteColor={onChangeNoteColor}\r\n          />\r\n          <Tooltip title=\"Archive\">\r\n            <IconButton aria-label=\"Archive\" onClick={onArchiveNote}>\r\n              <UnarchiveOutlinedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Menu\r\n            icon={<MoreVertIcon />}\r\n            options={dropdownOptions}\r\n            title='More'\r\n          ></Menu>\r\n\r\n          {isEdit && (\r\n            <>\r\n              <Tooltip title=\"Undo\">\r\n                <IconButton aria-label=\"Undo\">\r\n                  <UndoIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Tooltip title=\"Redo\">\r\n                <IconButton aria-label=\"Redo\">\r\n                  <RedoIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </>\r\n          )}\r\n        </div>\r\n        {isEdit && <button>Close</button>}\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nToolbox.propTypes = {\r\n  activeColor: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  dropdownOptions: PropTypes.array.isRequired,\r\n  isPinned: PropTypes.bool.isRequired,\r\n  onArchiveNote: PropTypes.func.isRequired,\r\n  onChangeNoteColor: PropTypes.func.isRequired,\r\n  onPinNote: PropTypes.func.isRequired,\r\n  role: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Toolbox;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./NoteFormField.module.scss\";\r\n\r\nconst NoteFormField = ({ isFocused, name, placeholder, value, onSetField }) => {\r\n  return (\r\n    <textarea\r\n      className={styles.NoteFormField}\r\n      name={name}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onChange={onSetField}\r\n      // wrap=\"hard\"\r\n      autoFocus={isFocused}\r\n    />\r\n  );\r\n};\r\n\r\nNoteFormField.propTypes = {\r\n  isFocused: PropTypes.bool,\r\n  name: PropTypes.string,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string,\r\n  onSetField: PropTypes.func,\r\n};\r\n\r\nexport default NoteFormField;\r\n","import React, { createRef, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./NoteForm.module.scss\";\r\nimport Toolbox from \"../Toolbox/Toolbox\";\r\nimport NoteFormField from \"../NoteFormField/NoteFormField\";\r\n// import NoteBorder from \"../NoteBorder/NoteBorder\";\r\n\r\nconst NoteForm = ({\r\n  title,\r\n  content,\r\n  color,\r\n  isPinned,\r\n  onSetTitle,\r\n  onSetContent,\r\n  onSetColor,\r\n  onSetIsPinned,\r\n  onSubmit,\r\n  addNote,\r\n  archiveNote,\r\n  deleteNote\r\n}) => {\r\n  const noteFormRef = createRef();\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClick);\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClick);\r\n    };\r\n  });\r\n\r\n  const handleClick = e => {\r\n    // console.log(!!noteFormRef)\r\n    if (noteFormRef.current && noteFormRef.current.contains(e.target)) return;\r\n    onSubmit();\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit();\r\n  };\r\n\r\n  const test = Boolean(title.trim() || content.trim());\r\n  let dropdownOptions = [[\"Add label\"]];\r\n  if (test) {\r\n    dropdownOptions = [\r\n      [\"Delete note\", deleteNote],\r\n      ...dropdownOptions,\r\n      [\"Make a copy\", addNote]\r\n    ];\r\n  }\r\n\r\n  return (\r\n    <form\r\n      name=\"noteForm\"\r\n      ref={noteFormRef}\r\n      onSubmit={handleSubmit}\r\n      className={`${styles.NoteForm} ${styles[color]}`}\r\n    >\r\n      <Toolbox\r\n        activeColor={color}\r\n        dropdownOptions={dropdownOptions}\r\n        role=\"edit\"\r\n        isPinned={isPinned}\r\n        onArchiveNote={archiveNote}\r\n        onChangeNoteColor={onSetColor}\r\n        onPinNote={onSetIsPinned}\r\n      >\r\n        <NoteFormField\r\n          name=\"title\"\r\n          placeholder=\"Title\"\r\n          value={title}\r\n          onSetField={e => onSetTitle(e.target.value)}\r\n        />\r\n        <NoteFormField\r\n          name=\"content\"\r\n          placeholder=\"Take a note...\"\r\n          value={content}\r\n          onSetField={e => onSetContent(e.target.value)}\r\n          isFocused\r\n        />\r\n      </Toolbox>\r\n    </form>\r\n  );\r\n};\r\n\r\nNoteForm.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  content: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  onSetTitle: PropTypes.func.isRequired,\r\n  onSetContent: PropTypes.func.isRequired,\r\n  onSetColor: PropTypes.func.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n  addNote: PropTypes.func.isRequired,\r\n  archiveNote: PropTypes.func.isRequired,\r\n  deleteNote: PropTypes.func.isRequired\r\n};\r\n\r\nexport default NoteForm;\r\n","export const NOTE_STATUS = {\r\n  ACTIVE: \"ACTIVE\",\r\n  ARCHIVED: \"ARCHIVED\",\r\n  DELETED: \"DELETED\"\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport styles from \"./NewNote.module.scss\";\r\nimport NoteForm from \"../NoteForm/NoteForm\";\r\n// import NoteFormField from \"../NoteFormField/NoteFormField\";\r\n// import NoteBorder from \"../NoteBorder/NoteBorder\";\r\nimport { addNote } from \"../../redux/actions/actionCreators\";\r\nimport { NOTE_STATUS } from \"../../constants\";\r\n\r\nconst NewNote = ({ addNote }) => {\r\n  const [color, setColor] = useState(\"white\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [isPinned, setIsPinned] = useState(false);\r\n  const [formIsActive, setFormIsActive] = useState(false);\r\n\r\n  const addNewNote = () => {\r\n    if (!validateForm()) {\r\n      resetForm();\r\n      return;\r\n    }\r\n    // handleAddNote(NOTE_STATUS.ACTIVE)\r\n    addNote(title, content, color, [], isPinned, NOTE_STATUS.ACTIVE);\r\n    resetForm();\r\n  };\r\n\r\n  const handleAddNote = status => {\r\n    if (!validateForm()) return;\r\n    // handleAddNote(status);\r\n    addNote(title, content, color, [], isPinned, status);\r\n    if (status === NOTE_STATUS.ACTIVE) return;\r\n    resetForm();\r\n  };\r\n\r\n  // const handleAddNote = status => {\r\n  //   addNote(title, content, color, [], isPinned, status);\r\n  // }\r\n\r\n  const validateForm = () => {\r\n    return !!(title.trim() || content.trim());\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setColor(\"white\");\r\n    setTitle(\"\");\r\n    setContent(\"\");\r\n    setIsPinned(false);\r\n    setFormIsActive(false);\r\n  };\r\n\r\n  // console.log('new', formIsActive);\r\n  return (\r\n    <>\r\n      {formIsActive ? (\r\n        <NoteForm\r\n          title={title}\r\n          content={content}\r\n          color={color}\r\n          isPinned={isPinned}\r\n          onSetTitle={setTitle}\r\n          onSetContent={setContent}\r\n          onSetColor={setColor}\r\n          onSetIsPinned={() => setIsPinned(!isPinned)}\r\n          onSubmit={addNewNote}\r\n          addNote={() => handleAddNote(NOTE_STATUS.ACTIVE)}\r\n          archiveNote={() => handleAddNote(NOTE_STATUS.ARCHIVED)}\r\n          deleteNote={() => handleAddNote(NOTE_STATUS.DELETED)}\r\n        />\r\n      ) : (\r\n        // <NoteBorder>\r\n        <form\r\n          className={`${styles.dummyForm}`}\r\n          onClick={() => setFormIsActive(true)}\r\n          onKeyDown={() => setFormIsActive(true)}\r\n        >\r\n          <input type=\"text\" placeholder=\"Take a note...\" />\r\n        </form>\r\n        /* </NoteBorder> */\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(null, { addNote })(NewNote);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport NoteForm from \"../NoteForm/NoteForm\";\r\n\r\nimport {\r\n  addNote,\r\n  archiveNote,\r\n  editNote,\r\n  deleteNote\r\n} from \"../../redux/actions/actionCreators\";\r\n\r\nconst EditNote = ({\r\n  note,\r\n  addNote,\r\n  archiveNote,\r\n  editNote,\r\n  deleteNote,\r\n  onSetNoteIsEditable,\r\n  open,\r\n  onClose\r\n}) => {\r\n  const { id, title, content, color, labels, isPinned, status } = note;\r\n  const [newTitle, setNewTitle] = useState(title);\r\n  const [newContent, setNewContent] = useState(content);\r\n  const [newColor, setNewColor] = useState(color);\r\n  const [newIsPinned, setNewIsPinned] = useState(isPinned);\r\n  // const [formIsActive, setFormIsActive] = useState(false);\r\n\r\n  const handleEditNote = () => {\r\n    if (title !== newTitle || content !== newContent || color !== newColor) {\r\n      editNote(id, newTitle, newContent, newColor, labels, isPinned, status);\r\n    }\r\n    onSetNoteIsEditable(false);\r\n    // setFormIsActive(false);\r\n  };\r\n\r\n  // console.log('edit', formIsActive)\r\n  return (\r\n    <Dialog open={open} onClose={onClose}>\r\n      <NoteForm\r\n        title={newTitle}\r\n        content={newContent}\r\n        color={newColor}\r\n        isPinned={newIsPinned}\r\n        onSetTitle={setNewTitle}\r\n        onSetContent={setNewContent}\r\n        onSetColor={setNewColor}\r\n        onSetIsPinned={() => setNewIsPinned(!newIsPinned)}\r\n        onSubmit={handleEditNote}\r\n        addNote={() => addNote(title, content, color, labels, isPinned, status)}\r\n        archiveNote={() => archiveNote(id)}\r\n        deleteNote={() => deleteNote(id)}\r\n      />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nEditNote.propTypes = {\r\n  addNote: PropTypes.func.isRequired,\r\n  archiveNote: PropTypes.func.isRequired,\r\n  editNote: PropTypes.func.isRequired,\r\n  deleteNote: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addNote, archiveNote, editNote, deleteNote })(\r\n  EditNote\r\n);\r\n","import React, { useState, createRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport styles from \"./Note.module.scss\";\r\nimport Toolbox from \"../Toolbox/Toolbox\";\r\nimport EditNote from \"../EditNote/EditNote\";\r\n\r\nimport {\r\n  addNote,\r\n  archiveNote,\r\n  changeNoteColor,\r\n  deleteNote,\r\n  pinNote\r\n} from \"../../redux/actions/actionCreators\";\r\n\r\nconst Note = ({\r\n  addNote,\r\n  archiveNote,\r\n  changeNoteColor,\r\n  deleteNote,\r\n  note,\r\n  pinNote\r\n}) => {\r\n  const [dialogIsOpen, setDialogIsOpen] = useState(false);\r\n  const noteRef = createRef();\r\n  const { id, title, content, color, labels, isPinned, status } = note;\r\n\r\n  function handleMouseHover(e) {\r\n    // const toolbox = e.currentTarget.children[0].children;\r\n    // for (var tag of toolbox) {\r\n    //   if (tag.type === \"button\" || tag.tagName === \"FOOTER\") {\r\n    //     if (e.type === \"mouseenter\") {\r\n    //       tag.style.opacity = \"1\";\r\n    //     } else if (e.type === \"mouseleave\") {\r\n    //       tag.style.opacity = \"0\";\r\n    //     }\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <EditNote\r\n        note={note}\r\n        open={dialogIsOpen}\r\n        onClose={() => setDialogIsOpen(false)}\r\n      />\r\n      <div\r\n        ref={noteRef}\r\n        className={`${styles.Note} ${styles[color]}`}\r\n        onMouseEnter={handleMouseHover}\r\n        onMouseLeave={handleMouseHover}\r\n        onClick={() => setDialogIsOpen(true)}\r\n      >\r\n        <Toolbox\r\n          activeColor={color}\r\n          dropdownOptions={[\r\n            [\"Delete note\", () => deleteNote(id)],\r\n            [\"Add label\"],\r\n            [\r\n              \"Make a copy\",\r\n              () => addNote(title, content, color, labels, isPinned, status)\r\n            ]\r\n          ]}\r\n          isPinned={isPinned}\r\n          onArchiveNote={() => archiveNote(id)}\r\n          onChangeNoteColor={newColor => changeNoteColor(id, newColor)}\r\n          onPinNote={() => pinNote(id)}\r\n          role=\"view\"\r\n        >\r\n          {title && <h3>{title}</h3>}\r\n          {content && <p>{content}</p>}\r\n          {labels.length > 0 && (\r\n            <ul className={styles.labels}>\r\n              {labels.map((label, index) => (\r\n                <li key={index}>{label}</li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </Toolbox>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nNote.propTypes = {\r\n  note: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    content: PropTypes.string.isRequired,\r\n    color: PropTypes.string.isRequired,\r\n    labels: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\r\n    isPinned: PropTypes.bool.isRequired\r\n  }).isRequired,\r\n  addNote: PropTypes.func.isRequired,\r\n  archiveNote: PropTypes.func.isRequired,\r\n  changeNoteColor: PropTypes.func.isRequired,\r\n  deleteNote: PropTypes.func.isRequired,\r\n  pinNote: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, {\r\n  addNote,\r\n  archiveNote,\r\n  changeNoteColor,\r\n  deleteNote,\r\n  pinNote\r\n})(Note);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./NoteList.module.scss\";\r\nimport Note from \"../Note/Note\";\r\n\r\nconst NoteList = ({ notes, notesLayout }) => {\r\n  let styledNoteList = styles.NoteList;\r\n  if (notesLayout === \"list\") {\r\n    styledNoteList += ` ${styles.list}`;\r\n  }\r\n\r\n  return (\r\n    <div className={styledNoteList}>\r\n      {notes.map(note => {\r\n        return <Note key={note.id} note={note} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nNoteList.propTypes = {\r\n  notes: PropTypes.oneOfType([\r\n    PropTypes.object.isRequired,\r\n    PropTypes.array.isRequired\r\n  ]).isRequired,\r\n  notesLayout: PropTypes.string.isRequired\r\n};\r\n\r\nexport default NoteList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./FilterMessage.module.scss\";\r\n\r\nconst FilterMessage = ({ extraMessage, icon, message }) => {\r\n  return (\r\n    <div className={styles.FilterMessage}>\r\n      <p>{extraMessage}</p>\r\n      <div>\r\n        {icon}\r\n        <p>{message}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilterMessage.propTypes = {\r\n  extraMessage: PropTypes.string,\r\n  icon: PropTypes.node.isRequired,\r\n  message: PropTypes.string.isRequired\r\n};\r\n\r\nexport default FilterMessage;\r\n","import { createSelector } from \"reselect\";\r\nimport {\r\n  getSlice\r\n  // getSliceIds, getSliceById\r\n} from \"./generics\";\r\nimport { NOTE_STATUS } from \"../../constants\";\r\n\r\n// const getStoredLabels = state => state.labels;\r\nconst getStoredNotes = state => state.notes;\r\n\r\n// const getNoteById = (storedNotes, storedLabels, id) => {\r\n//   const note = storedNotes.byId[id];\r\n//   return {\r\n//     ...note,\r\n//     labels: note.labels.map(\r\n//       labelId => getSliceById(storedLabels, labelId).label\r\n//     )\r\n//   };\r\n// };\r\n\r\n// const getNotes = createSelector(\r\n//   [getStoredNotes, getStoredLabels],\r\n//   (storedNotes, storedLabels) => {\r\n//     return getSliceIds(storedNotes).map(id =>\r\n//       getNoteById(storedNotes, storedLabels, id)\r\n//     );\r\n//   }\r\n// );\r\n\r\nexport const getNotes = createSelector([getStoredNotes], storedNotes =>\r\n  getSlice(storedNotes)\r\n);\r\n\r\nconst getSearchQuery = (_, props) => props.searchQuery;\r\n// const getNoteStatus = (_, props) => props.status;\r\nconst getArg = (_, arg) => arg;\r\n\r\nexport const getNotesByStatus = createSelector(\r\n  [getArg, getNotes],\r\n  (noteStatus, notes) => {\r\n    const { ACTIVE, ARCHIVED, DELETED } = NOTE_STATUS;\r\n\r\n    switch (noteStatus) {\r\n      case ACTIVE:\r\n        return notes.filter(note => note.status === ACTIVE);\r\n      case ARCHIVED:\r\n        return notes.filter(note => note.status === ARCHIVED);\r\n      case DELETED:\r\n        return notes.filter(note => note.status === DELETED);\r\n      // case search:\r\n      //   return notes.filter(\r\n      //     note =>\r\n      //       note.title.toLowerCase().includes(searchQuery) ||\r\n      //       (note.content.toLowerCase().includes(searchQuery) &&\r\n      //         note.status !== deleted)\r\n      //   );\r\n      // case labels:\r\n      //   console.log(visibilityFilter);\r\n      //   return notes;\r\n      // case reminders:\r\n      //   return notes;\r\n      default:\r\n        return notes;\r\n    }\r\n  }\r\n);\r\n\r\nconst getNotDeletedNotes = createSelector([getNotes], notes =>\r\n  notes.filter(note => note.status !== \"deleted\")\r\n);\r\n\r\nexport const getNotesBySearchQuery = createSelector(\r\n  [getNotDeletedNotes, getSearchQuery],\r\n  (notes, searchQuery) =>\r\n    notes.filter(\r\n      note =>\r\n        note.title.toLowerCase().includes(searchQuery) ||\r\n        note.content.toLowerCase().includes(searchQuery)\r\n    )\r\n);\r\n\r\n// export const getNotesByLabel = createSelector(\r\n//   [getNotDeletedNotes, label],\r\n//   (notDeletedNotes, label) =>\r\n//     notDeletedNotes.filter(note => note.labels.includes(label))\r\n// );\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport EmojiObjectsOutlinedIcon from \"@material-ui/icons/EmojiObjectsOutlined\";\r\n\r\nimport FilterPage from \"./FilterPage\";\r\nimport NewNote from \"../NewNote/NewNote\";\r\nimport NoteList from \"../NoteList/NoteList\";\r\nimport FilterMessage from \"../FilterMessage/FilterMessage\";\r\n\r\nimport { getNotesByStatus } from \"../../redux/selectors/notes\";\r\nimport { NOTE_STATUS } from \"../../constants\";\r\n\r\nconst Home = ({ notes, notesLayout }) => {\r\n  return (\r\n    <FilterPage>\r\n      <NewNote />\r\n\r\n      {notes.length > 0 ? (\r\n        <NoteList notes={notes} notesLayout={notesLayout} />\r\n      ) : (\r\n        <FilterMessage\r\n          message=\"No notes yet\"\r\n          icon={<EmojiObjectsOutlinedIcon />}\r\n        />\r\n      )}\r\n    </FilterPage>\r\n  );\r\n};\r\n\r\nHome.propTypes = {\r\n  notes: PropTypes.array.isRequired,\r\n  notesLayout: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  notes: getNotesByStatus(state, NOTE_STATUS.ACTIVE)\r\n});\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ArchiveOutlinedIcon from \"@material-ui/icons/ArchiveOutlined\";\r\n\r\nimport FilterPage from \"./FilterPage\";\r\nimport NoteList from \"../NoteList/NoteList\";\r\nimport FilterMessage from \"../FilterMessage/FilterMessage\";\r\n\r\nimport { getNotesByStatus } from \"../../redux/selectors/notes\";\r\nimport { NOTE_STATUS } from \"../../constants\";\r\n\r\nconst Archive = ({ notes, notesLayout }) => {\r\n  return (\r\n    <FilterPage>\r\n      {notes.length > 0 ? (\r\n        <NoteList notes={notes} notesLayout={notesLayout} />\r\n      ) : (\r\n        <FilterMessage\r\n          message=\"Your archived notes appear here\"\r\n          icon={<ArchiveOutlinedIcon />}\r\n        />\r\n      )}\r\n    </FilterPage>\r\n  );\r\n};\r\n\r\nArchive.propTypes = {\r\n  notes: PropTypes.array.isRequired,\r\n  notesLayout: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  notes: getNotesByStatus(state, NOTE_STATUS.ARCHIVED)\r\n});\r\n\r\nexport default connect(mapStateToProps)(Archive);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\n\r\nimport FilterPage from \"./FilterPage\";\r\nimport NoteList from \"../NoteList/NoteList\";\r\nimport FilterMessage from \"../FilterMessage/FilterMessage\";\r\n\r\nimport { getNotesByStatus } from \"../../redux/selectors/notes\";\r\nimport { NOTE_STATUS } from \"../../constants\";\r\n\r\nconst Bin = ({ notes, notesLayout }) => {\r\n  return (\r\n    <FilterPage>\r\n      {notes.length > 0 ? (\r\n        <NoteList notes={notes} notesLayout={notesLayout} />\r\n      ) : (\r\n        <FilterMessage\r\n          message=\"No notes in Recycle Bin\"\r\n          extraMessage=\"Notes in the Recycle Bin are deleted after 7 days.\"\r\n          icon={<DeleteOutlinedIcon />}\r\n        />\r\n      )}\r\n    </FilterPage>\r\n  );\r\n};\r\n\r\nBin.propTypes = {\r\n  notes: PropTypes.array.isRequired,\r\n  notesLayout: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  notes: getNotesByStatus(state, NOTE_STATUS.DELETED)\r\n});\r\n\r\nexport default connect(mapStateToProps)(Bin);\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\r\nimport { StylesProvider } from \"@material-ui/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nimport styles from \"./App.module.scss\";\r\nimport Header from \"../Header/Header\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport Home from \"../FilterPage/Home\";\r\nimport Archive from \"../FilterPage/Archive\";\r\nimport Bin from \"../FilterPage/Bin\";\r\n\r\nconst theme = createMuiTheme({\r\n  props: {\r\n    MuiButtonBase: {\r\n      disableRipple: true\r\n    }\r\n  }\r\n});\r\n\r\nfunction App() {\r\n  // console.warn('App')\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\r\n  const [notesLayout, setNotesLayout] = useState(\"list\");\r\n  const [isDarkThemeActive, setIsDarkThemeActive] = useState(false);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  // handleClick = e => {\r\n  //   const noteForm = document.forms.noteForm;\r\n  //   if (noteForm.contains(e.target)) return;\r\n  //   this.makeNote();\r\n  // };\r\n\r\n  return (\r\n    <StylesProvider injectFirst>\r\n      <ThemeProvider theme={theme}>\r\n        <Router>\r\n          <CssBaseline />\r\n          <div\r\n            className={styles.App}\r\n            style={isDarkThemeActive ? { backgroundColor: \"pink\" } : null}\r\n            // onClick={handleClose}\r\n          >\r\n            <Header\r\n              notesLayout={notesLayout}\r\n              searchQuery={searchQuery}\r\n              setSearchQuery={setSearchQuery}\r\n              toggleDarkTheme={() => setIsDarkThemeActive(!isDarkThemeActive)}\r\n              toggleNotesLayout={() =>\r\n                setNotesLayout(notesLayout === \"list\" ? \"grid\" : \"list\")\r\n              }\r\n              toggleSidebar={() => setIsSidebarOpen(!isSidebarOpen)}\r\n            />\r\n            <main>\r\n              {window.innerWidth >= 1024 && isSidebarOpen && <Sidebar />}\r\n\r\n              <Switch>\r\n                <Route path=\"/home\">\r\n                  <Home notesLayout={notesLayout} />\r\n                </Route>\r\n                <Route path=\"/archive\">\r\n                  <Archive notesLayout={notesLayout} />\r\n                </Route>\r\n                <Route path=\"/bin\">\r\n                  <Bin notesLayout={notesLayout} />\r\n                </Route>\r\n              </Switch>\r\n            </main>\r\n          </div>\r\n        </Router>\r\n      </ThemeProvider>\r\n    </StylesProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const round = number => Math.round(number * 100) / 100;\r\n\r\nconst monitorReducerEnhancer = createStore => (\r\n  reducer,\r\n  initialState,\r\n  enhancer\r\n) => {\r\n  const monitorReducer = (state, action) => {\r\n    const start = performance.now();\r\n    const newState = reducer(state, action);\r\n    const end = performance.now();\r\n    const diff = round(end - start);\r\n\r\n    console.log(\"Reducer process time:\", diff);\r\n    return newState;\r\n  };\r\n  return createStore(monitorReducer, initialState, enhancer);\r\n};\r\n\r\nexport default monitorReducerEnhancer;\r\n","const logger = store => next => action => {\r\n  console.group(action.type);\r\n  console.info(\"dispatching\", action);\r\n  let result = next(action);\r\n  console.log(\"next state\", store.getState());\r\n  console.groupEnd();\r\n  return result;\r\n};\r\n\r\nexport default logger;\r\n","import { combineReducers } from \"redux\";\r\nimport {\r\n  ADD_NOTE,\r\n  EDIT_NOTE,\r\n  LABEL_NOTE,\r\n  ARCHIVE_NOTE,\r\n  CHANGE_NOTE_COLOR,\r\n  PIN_NOTE,\r\n  DELETE_NOTE\r\n} from \"../actions/actionTypes\";\r\nimport { NOTE_STATUS } from \"../../constants\";\r\n\r\nconst { ACTIVE, ARCHIVED, DELETED } = NOTE_STATUS;\r\n\r\nconst initialState = {\r\n  1: {\r\n    id: 1,\r\n    title: \"Project\",\r\n    content: \"gds active\",\r\n    color: \"orange\",\r\n    labels: [\"a\", \"b\"],\r\n    isPinned: true,\r\n    status: ACTIVE\r\n  },\r\n  2: {\r\n    id: 2,\r\n    title: \"\",\r\n    content: \"hrer archived\",\r\n    color: \"yellow\",\r\n    labels: [],\r\n    isPinned: false,\r\n    status: ARCHIVED\r\n  },\r\n  3: {\r\n    id: 3,\r\n    title: \"\",\r\n    content: \"erw deleted\",\r\n    color: \"green\",\r\n    labels: [],\r\n    isPinned: false,\r\n    status: ARCHIVED\r\n  },\r\n  4: {\r\n    id: 4,\r\n    title: \"\",\r\n    content: \"Qrsghh& active\",\r\n    color: \"pink\",\r\n    labels: [],\r\n    isPinned: false,\r\n    status: ACTIVE\r\n  }\r\n};\r\n\r\nconst allNotes = (state = [1, 2, 3, 4], action) => {\r\n  switch (action.type) {\r\n    case ADD_NOTE:\r\n      return [...state, action.id];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst notesById = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_NOTE: {\r\n      const { id, title, content, color, labels, isPinned, status } = action;\r\n      return {\r\n        ...state,\r\n        [id]: {\r\n          id,\r\n          title,\r\n          content,\r\n          color,\r\n          labels,\r\n          isPinned,\r\n          status\r\n        }\r\n      };\r\n    }\r\n    case ARCHIVE_NOTE: {\r\n      const { id } = action;\r\n      return {\r\n        ...state,\r\n        [id]: {\r\n          ...state[id],\r\n          isPinned: false,\r\n          status: ARCHIVED\r\n        }\r\n      };\r\n    }\r\n    case DELETE_NOTE: {\r\n      const { id } = action;\r\n      return {\r\n        ...state,\r\n        [id]: {\r\n          ...state[id],\r\n          isPinned: false,\r\n          status: DELETED\r\n        }\r\n      };\r\n    }\r\n    case EDIT_NOTE: {\r\n      const { id, title, content, color, labels, isPinned, status } = action;\r\n      return {\r\n        ...state,\r\n        [id]: {\r\n          id,\r\n          title,\r\n          content,\r\n          color,\r\n          labels,\r\n          isPinned,\r\n          status\r\n        }\r\n      }\r\n    }\r\n    case CHANGE_NOTE_COLOR: {\r\n      const { id, color } = action;\r\n      return {\r\n        ...state,\r\n        [id]: {\r\n          ...state[id],\r\n          color\r\n        }\r\n      };\r\n    }\r\n    case LABEL_NOTE: {\r\n      const { noteId, labelId } = action;\r\n      const note = state[noteId];\r\n      return {\r\n        ...state,\r\n        [noteId]: {\r\n          ...note,\r\n          labels: note.labels.concat(labelId)\r\n        }\r\n      };\r\n    }\r\n    case PIN_NOTE: {\r\n      const { id } = action;\r\n      const note = state[id];\r\n      return {\r\n        ...state,\r\n        [id]: {\r\n          ...note,\r\n          isPinned: !note.isPinned\r\n        }\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({ allIds: allNotes, byId: notesById });\r\n","import { combineReducers } from \"redux\";\r\nimport { ADD_LABEL, DELETE_LABEL } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  1: {\r\n    id: 1,\r\n    label: \"zzz\",\r\n    notes: [1, 3]\r\n  },\r\n  2: {\r\n    id: 2,\r\n    label: \"abc\",\r\n    notes: [1, 2]\r\n  },\r\n  3: {\r\n    id: 3,\r\n    label: \"bbbb\",\r\n    notes: []\r\n  }\r\n};\r\n\r\nconst allLabels = (state = [1, 2, 3], action) => {\r\n  switch (action.type) {\r\n    case ADD_LABEL:\r\n      return [...state, action.id];\r\n    case DELETE_LABEL:\r\n      return [...state.filter(id => action.id !== id)];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst labelsById = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_LABEL: {\r\n      const { id, label } = action;\r\n      return {\r\n        ...state,\r\n        [id]: {\r\n          id,\r\n          label,\r\n          notes: []\r\n        }\r\n      };\r\n    }\r\n    case DELETE_LABEL: {\r\n      const { id } = action;\r\n      const newState = { ...state };\r\n      delete newState[id];\r\n      return newState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  allIds: allLabels,\r\n  byId: labelsById\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport notes from \"./notes\";\r\nimport labels from \"./labels\";\r\n\r\nexport default combineReducers({\r\n  notes,\r\n  labels\r\n});\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App/App\";\nimport configureStore from \"./redux/configureStore\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = configureStore();\n\nconst renderApp = () =>\n  render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"app-root\")\n  );\n\n// if (process.env.NOTE_ENV !== \"production\" && module.hot) {\n//   module.hot.accept(\"./components/App/App\", renderApp);\n// }\nrenderApp();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport monitorReducerEnhancer from \"./enhancers/monitorReducer\";\r\nimport loggerMiddleware from \"./middleware/logger\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default function configureStore(preloadedState) {\r\n  const middlewares = [loggerMiddleware, thunkMiddleware];\r\n  const middlewaresEnhancer = applyMiddleware(...middlewares);\r\n\r\n  const enhancers = [middlewaresEnhancer, monitorReducerEnhancer];\r\n  const composedEnhancers = composeWithDevTools(...enhancers);\r\n  const store = createStore(rootReducer, preloadedState, composedEnhancers);\r\n\r\n  // if (process.env.NOTE_ENV !== \"production\" && module.hot) {\r\n  //   module.hot.accept(\"./reducers/reducers\", () =>\r\n  //     store.replaceReducer(rootReducer)\r\n  //   );\r\n  // }\r\n\r\n  return store;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbox\":\"Toolbox_Toolbox__1srVH\",\"select\":\"Toolbox_select__agP5k\",\"pin\":\"Toolbox_pin__1Zt5c\",\"tools\":\"Toolbox_tools__tl48N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Settings\":\"Settings_Settings__3yYWG\",\"cancel\":\"Settings_cancel__3WV6w\",\"save\":\"Settings_save__2i-bT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"white\":\"ColorPicker_white__3CX6s\",\"red\":\"ColorPicker_red__Et-nJ\",\"orange\":\"ColorPicker_orange__3ayCb\",\"yellow\":\"ColorPicker_yellow__1yj1o\",\"green\":\"ColorPicker_green__1ZW49\",\"teal\":\"ColorPicker_teal__2ITZo\",\"blue\":\"ColorPicker_blue__1V0qP\",\"dark-blue\":\"ColorPicker_dark-blue__3-X3n\",\"purple\":\"ColorPicker_purple__2O2zT\",\"pink\":\"ColorPicker_pink__1DdkF\",\"brown\":\"ColorPicker_brown__26NNv\",\"grey\":\"ColorPicker_grey__3XfdN\",\"container\":\"ColorPicker_container__3kiQN\",\"menu\":\"ColorPicker_menu__UPYCI\",\"circle\":\"ColorPicker_circle__2ZQ7G\",\"check\":\"ColorPicker_check__AjX3J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Note\":\"Note_Note__3Ko90\",\"white\":\"Note_white__1IqXk\",\"red\":\"Note_red__mA6rj\",\"orange\":\"Note_orange__1kPCx\",\"yellow\":\"Note_yellow__BpSvf\",\"green\":\"Note_green__A5ITI\",\"teal\":\"Note_teal__1pvGy\",\"blue\":\"Note_blue__2YobW\",\"dark-blue\":\"Note_dark-blue__2MqXK\",\"purple\":\"Note_purple__vKGC5\",\"pink\":\"Note_pink__3LQ8Q\",\"brown\":\"Note_brown__m1Oel\",\"grey\":\"Note_grey__GzzRa\",\"labels\":\"Note_labels__MRmOk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__c5TRD\",\"iconSidebar\":\"Header_iconSidebar__3Qf0H\",\"menuContainer\":\"Header_menuContainer__1prGr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Menu_root__9y6kp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sidebar\":\"Sidebar_Sidebar__1EjaY\",\"active\":\"Sidebar_active__ETTYX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NoteForm\":\"NoteForm_NoteForm__3IlpY\",\"white\":\"NoteForm_white__377ML\",\"red\":\"NoteForm_red__3KmVq\",\"orange\":\"NoteForm_orange__1CF6Z\",\"yellow\":\"NoteForm_yellow__3qRUm\",\"green\":\"NoteForm_green__1Lovm\",\"teal\":\"NoteForm_teal__1deqo\",\"blue\":\"NoteForm_blue__1svYs\",\"dark-blue\":\"NoteForm_dark-blue__wY5QM\",\"purple\":\"NoteForm_purple__oXQqD\",\"pink\":\"NoteForm_pink__nSHOl\",\"brown\":\"NoteForm_brown__23IxM\",\"grey\":\"NoteForm_grey__ogzjX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NoteList\":\"NoteList_NoteList__16n8-\",\"list\":\"NoteList_list__205b6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__146Ef\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__2mctg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterPage\":\"FilterPage_FilterPage__1QQXS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dummyForm\":\"NewNote_dummyForm__2ok1t\"};"],"sourceRoot":""}